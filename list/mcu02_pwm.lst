C51 COMPILER V9.59.0.0   MCU02_PWM                                                         03/04/2021 16:35:01 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MCU02_PWM
OBJECT MODULE PLACED IN .\output\mcu02_pwm.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Library\byd_standard_peripheral\source\mcu02_pwm.c LARGE OMF2 OPTIMIZE(8
                    -,SPEED) BROWSE INCDIR(.\include;.\Library\byd_standard_peripheral\include;.\byd_api\byd_key\include;.\byd_api\byd_mifare
                    -\include;.\byd_tool_comm;.\byd_rfid;.\mmi_inc) DEBUG PRINT(.\list\mcu02_pwm.lst) TABS(2) OBJECT(.\output\mcu02_pwm.obj)

line level    source

   1          /*!
   2              \file  mcu02_pwm.c
   3              \brief pwm driver
   4          */
   5          
   6          /*
   7              Copyright (C) 2020 BYD
   8          
   9              2020-05-08, V1.0.0, firmware for mcu02
  10          */
  11          #include "mcu02_pwm.h"
  12          
  13          
  14          /*!
  15              \brief      pwm0 duty and width config
  16              \param[in]  cnt_h: pwm high level cnt
  17                  cnt_l: pwm low level cnt
  18                  pwm_duty = (cnt_h+cnt_l)/sys_clk
  19                  pwm_width = cnt_h/(cnt_h+cnt_l)
  20              \param[out] none
  21              \retval     none
  22          */
  23          void pwm0_duty_width_config(uint16_t cnt_h,uint16_t cnt_l)
  24          {
  25   1        PWM0_L_L = (uint8_t)cnt_l;
  26   1        PWM0_L_H = (uint8_t)(cnt_l >> 8);
  27   1        PWM0_H_L = (uint8_t)cnt_h;
  28   1        PWM0_H_H = (uint8_t)(cnt_h >> 8);
  29   1      }
  30          
  31          /*!
  32              \brief      pwm1 duty and width config
  33              \param[in]  cnt_h: pwm high level cnt
  34                  cnt_l: pwm low level cnt
  35                  pwm_duty = (cnt_h+cnt_l)/sys_clk
  36                  pwm_width = cnt_h/(cnt_h+cnt_l)
  37              \param[out] none
  38              \retval     none
  39          */
  40          void pwm1_duty_width_config(uint16_t cnt_h,uint16_t cnt_l)
  41          {
  42   1        PWM1_L_L = (uint8_t)cnt_l;
  43   1        PWM1_L_H = (uint8_t)(cnt_l >> 8);
  44   1        PWM1_H_L = (uint8_t)cnt_h;
  45   1        PWM1_H_H = (uint8_t)(cnt_h >> 8);
  46   1      }
  47          
  48          /*!
  49              \brief      pwm2 duty and width config
  50              \param[in]  cnt_h: pwm high level cnt
  51                  cnt_l: pwm low level cnt
  52                  pwm_duty = (cnt_h+cnt_l)/sys_clk
  53                  pwm_width = cnt_h/(cnt_h+cnt_l)
C51 COMPILER V9.59.0.0   MCU02_PWM                                                         03/04/2021 16:35:01 PAGE 2   

  54              \param[out] none
  55              \retval     none
  56          */
  57          void pwm2_duty_width_config(uint16_t cnt_h,uint16_t cnt_l)
  58          {
  59   1        PWM2_L_L = (uint8_t)cnt_l;
  60   1        PWM2_L_H = (uint8_t)(cnt_l >> 8);
  61   1        PWM2_H_L = (uint8_t)cnt_h;
  62   1        PWM2_H_H = (uint8_t)(cnt_h >> 8);
  63   1      }
  64          
  65          /*!
  66              \brief      pwm3 duty and width config
  67              \param[in]  cnt_h: pwm high level cnt
  68                  cnt_l: pwm low level cnt
  69                  pwm_duty = (cnt_h+cnt_l)/sys_clk
  70                  pwm_width = cnt_h/(cnt_h+cnt_l)
  71              \param[out] none
  72              \retval     none
  73          */
  74          void pwm3_duty_width_config(uint16_t cnt_h,uint16_t cnt_l)
  75          {
  76   1        PWM3_L_L = (uint8_t)cnt_l;
  77   1        PWM3_L_H = (uint8_t)(cnt_l >> 8);
  78   1        PWM3_H_L = (uint8_t)cnt_h;
  79   1        PWM3_H_H = (uint8_t)(cnt_h >> 8);
  80   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     60    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
