C51 COMPILER V9.59.0.0   DQIOT_DRV                                                         03/12/2021 12:09:30 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DQIOT_DRV
OBJECT MODULE PLACED IN .\output\dqiot_drv.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE source\dqiot_drv.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include;
                    -.\Library\byd_standard_peripheral\include;.\byd_api\byd_key\include;.\byd_api\byd_mifare\include;.\byd_tool_comm;.\byd_r
                    -fid;.\mmi_inc) DEBUG PRINT(.\list\dqiot_drv.lst) TABS(2) OBJECT(.\output\dqiot_drv.obj)

line level    source

   1          /*!
   2              \file  dqiot_drv.c
   3              \brief drv
   4          */
   5          
   6          /*
   7              Copyright (C) 2018 BYD
   8          */
   9          #ifndef __DQIOT_DRV_C__
  10          
  11          #define __DQIOT_DRV_C__
  12          #include "mmi_feature.h"
  13          
  14          #include "string.h"
  15          // #include <stdio.h>
  16          #include "stdlib.h"
  17          #include "byd_ctk.h"
  18          #include "dqiot_drv.h"
  19          
  20          #include "mcu02_timer.h"
  21          #include "mcu02_system.h"
  22          #include "mcu02_uart.h"
  23          #include "delay.h"
  24          
  25          uint16_t timer1_count_flag = 0;
  26          
  27          unsigned char uart_get_buf[UART0_GET_DATA_LEN];
  28          //unsigned char uart_send_buf[UART0_SEND_DATA_LEN];
  29          //unsigned char uart_sendbuflen = 0;
  30          unsigned char uart_getbuflen = 0;
  31          
  32          extern void Audio_timer_event_handler(void);
  33          extern void System_timer_event_handler(void);
  34          /*
  35          parameter: 
  36            none
  37          return :
  38            none
  39          */
  40          void dqiot_drv_init(void)
  41          {
  42   1        dqiot_drv_ext_ldo_init();
  43   1      
  44   1        dqiot_drv_reset_gpio_init();
  45   1        
  46   1        dqiot_drv_key_led_gpio_init();
  47   1        dqiot_drv_rgb_led_gpio_init();
  48   1      
  49   1        dqiot_drv_audio_gpio_init();
  50   1        dqiot_drv_fp_gpio_init();
  51   1        dqiot_drv_uart0B_init();
  52   1        dqiot_drv_motor_gpio_init();
  53   1        
C51 COMPILER V9.59.0.0   DQIOT_DRV                                                         03/12/2021 12:09:30 PAGE 2   

  54   1        gpio_init(VBAT_TEST_PORT,VBAT_TEST_PIN,GPIO_MODE_OUT);
  55   1        gpio_bit_reset(VBAT_TEST_PORT,VBAT_TEST_PIN);
  56   1      
  57   1        gpio_init(VBAT_ADC_PORT,VBAT_ADC_PIN,GPIO_MODE_IN_FLOATING);
  58   1        //gpio_bit_reset(VBAT_ADC_PORT,VBAT_ADC_PIN);
  59   1      
  60   1        gpio_init(WIFI_SDA_PORT,WIFI_SDA_PIN,GPIO_MODE_OUT);
  61   1        gpio_bit_set(WIFI_SDA_PORT,WIFI_SDA_PIN);
  62   1      
  63   1        gpio_init(WIFI_SCL_PORT,WIFI_SCL_PIN,GPIO_MODE_OUT);
  64   1        gpio_bit_set(WIFI_SCL_PORT,WIFI_SCL_PIN);
  65   1        
  66   1        gpio_init(SW_PORT,SW_PIN,GPIO_MODE_IN_FLOATING);
  67   1        //gpio_bit_reset(SW_PORT,SW_PIN);
  68   1      
  69   1        gpio_init(GPIOE,GPIO_PIN_4,GPIO_MODE_IN_FLOATING);
  70   1        //gpio_bit_reset(GPIOE,GPIO_PIN_4);
  71   1        gpio_init(GPIOE,GPIO_PIN_5,GPIO_MODE_IN_FLOATING);
  72   1        //gpio_bit_reset(GPIOE,GPIO_PIN_5);
  73   1        gpio_init(GPIOE,GPIO_PIN_6,GPIO_MODE_IN_FLOATING);
  74   1        //gpio_bit_reset(GPIOE,GPIO_PIN_6);
  75   1        gpio_init(GPIOE,GPIO_PIN_7,GPIO_MODE_IN_FLOATING);
  76   1        //gpio_bit_reset(GPIOE,GPIO_PIN_7);
  77   1      
  78   1      
  79   1        dqiot_drv_ext_ldo_on();
  80   1      
  81   1        dqiot_drv_key_led_on();
  82   1      
  83   1        
  84   1        dqiot_drv_timer2_init();
  85   1        
  86   1        dqiot_drv_timer2_start();
  87   1        return;
  88   1      }
  89          
  90          /*
  91          parameter: 
  92            none
  93          return :
  94            none
  95          */
  96          void dqiot_drv_wake_up(void)
  97          {
  98   1        
  99   1        //WDT_ENABLE();
 100   1        
 101   1        BOR_ENABLE();
 102   1      
 103   1        CSD_ENABLE();
 104   1      
 105   1        //RFID_ENABLE();
 106   1      
 107   1      
 108   1        //dqiot_drv_reset_gpio_init();
 109   1        
 110   1        dqiot_drv_key_led_gpio_init();
 111   1        dqiot_drv_rgb_led_gpio_init();
 112   1      #ifdef __LOCK_AUDIO_SUPPORT__
 113   1        dqiot_drv_audio_gpio_init();
 114   1      #endif
 115   1      #ifdef __LOCK_FP_SUPPORT__
C51 COMPILER V9.59.0.0   DQIOT_DRV                                                         03/12/2021 12:09:30 PAGE 3   

 116   1        dqiot_drv_fp_gpio_init();
 117   1      
 118   1        dqiot_drv_uart0B_init();
 119   1      #endif
 120   1      #ifdef __LOCK_MOTOR_SUPPORT__
 121   1        dqiot_drv_motor_gpio_init();
 122   1      #endif
 123   1      
 124   1        dqiot_drv_ext_ldo_on();
 125   1      
 126   1        dqiot_drv_key_led_on();
 127   1      
 128   1        //byd_setbaseline(0);//按键基线复位
 129   1        //delay_ms(200);
 130   1        return;
 131   1      }
 132          
 133          /*
 134          parameter: 
 135            none
 136          return :
 137            none
 138          */
 139          void dqiot_drv_enter_sleep(void)
 140          {
 141   1      
 142   1        //dqiot_drv_reset_gpio_init();
 143   1        UART0_DISABLE();
 144   1      
 145   1        dqiot_drv_ext_ldo_off();
 146   1      
 147   1      #ifdef __LOCK_AUDIO_SUPPORT__
 148   1        dqiot_drv_audio_gpio_deinit();
 149   1      #endif
 150   1      #ifdef __LOCK_FP_SUPPORT__
 151   1        dqiot_drv_fp_gpio_deinit();
 152   1      
 153   1      #endif
 154   1      #ifdef __LOCK_MOTOR_SUPPORT__
 155   1        dqiot_drv_motor_gpio_deinit();
 156   1      #endif
 157   1        dqiot_drv_key_led_gpio_deinit();
 158   1        dqiot_drv_rgb_led_gpio_deinit();
 159   1      
 160   1      //  rfid_enter_lowpower_config();
 161   1        
 162   1        CSD_DISABLE();
 163   1      
 164   1        //RFID_DISABLE();
 165   1      
 166   1        BOR_DISABLE();
 167   1        
 168   1        WDT_DISABLE();
 169   1        return;
 170   1      }
 171          
 172          
 173          
 174          /*!
 175              \brief      timer0 isr
 176              \param[in]  none
 177              \param[out] none
C51 COMPILER V9.59.0.0   DQIOT_DRV                                                         03/12/2021 12:09:30 PAGE 4   

 178              \retval     none
 179          */
 180          void dqiot_drv_timer0_isr(void) interrupt 1
 181          {
 182   1        INT_TIMER0_CLR();
 183   1      
 184   1        Audio_timer_event_handler();
 185   1      
 186   1        //if(GET_TIMER0_MODE() != TIMER_8BIT_AUTORELOAD)
 187   1        //{
 188   1        //  TH0 = TH0_reload;
 189   1        //  TL0 = TL0_reload;
 190   1        //}
 191   1      }
 192          
 193          /*!
 194              \brief      timer1 isr
 195              \param[in]  none
 196              \param[out] none
 197              \retval     none
 198          */
 199          void dqiot_drv_timer1_isr(void) interrupt 3
 200          {
 201   1        INT_TIMER1_CLR();
 202   1      
 203   1        if (GET_TIMER1_MODE() != TIMER_8BIT_AUTORELOAD)
 204   1        {
 205   2          TH1 = TH1_reload;
 206   2          TL1 = TL1_reload;
 207   2        }
 208   1        timer1_count_flag++;
 209   1      }
 210          
 211          
 212          /*!
 213              \brief      timer2 isr
 214              \param[in]  none
 215              \param[out] none
 216              \retval     none
 217          */
 218          void timer2_wdt_isr(void) interrupt 14
 219          {
 220   1      
 221   1        INT_WDT_TIMER2_CLR(); 
 222   1        if(GET_INT_TIMER2_FLAG_STATE())
 223   1        {
 224   2            //timer2
 225   2            System_timer_event_handler();
 226   2        }
 227   1        else if(GET_INT_WDT_FLAG_STATE())
 228   1        {
 229   2           //wdt
 230   2        } 
 231   1      
 232   1      }
 233          
 234          /*
 235          parameter: 
 236            none
 237          return :
 238            none
 239          */
C51 COMPILER V9.59.0.0   DQIOT_DRV                                                         03/12/2021 12:09:30 PAGE 5   

 240          uint16_t dqiot_drv_get_timer1_count(void)
 241          {
 242   1        return timer1_count_flag;
 243   1      }
 244          
 245          /*
 246          parameter: 
 247            none
 248          return :
 249            none
 250          */
 251          void dqiot_drv_set_timer1_count(uint16_t count)
 252          {
 253   1        timer1_count_flag = count;
 254   1        return;
 255   1      }
 256          
 257          /*
 258          parameter: 
 259            none
 260          return :
 261            none
 262          */
 263          void dqiot_drv_timer0_init(uint16_t us)
 264          {
 265   1        uint16_t count;
 266   1        count = us;
 267   1        TIMER0_MODE_SET(TIMER_8BIT_AUTORELOAD);//TIMER_13BIT,TIMER_8BIT_AUTORELOAD,TIMER_8BIT 
 268   1        TIMER0_CT_MODE_SET(TIME_SELECT);//COUNT_SELECT
 269   1        TIMER0_COUNT_8BIT(count);//TIMER_16BIT
 270   1        timer0_1_init(TIMER0);
 271   1        return;
 272   1      }
 273          
 274          /*
 275          parameter: 
 276            none
 277          return :
 278            none
 279          */
 280          void dqiot_drv_timer0_start(void)
 281          {
 282   1        INT_TIMER0_CLR();
 283   1        TIMER0_IPL_SET(HIGH);
 284   1        TIMER0_INT_ENABLE();
 285   1        TIMER0_ENABLE();
 286   1      }
 287          
 288          /*
 289          parameter: 
 290            none
 291          return :
 292            none
 293          */
 294          void dqiot_drv_timer0_stop(void)
 295          {
 296   1        INT_TIMER0_CLR();
 297   1        TIMER0_DISABLE();
 298   1      }
 299          
 300          /*
 301          parameter: 
C51 COMPILER V9.59.0.0   DQIOT_DRV                                                         03/12/2021 12:09:30 PAGE 6   

 302            none
 303          return :
 304            none
 305          */
 306          void dqiot_drv_timer1_init(void)
 307          {
 308   1        uint16_t count;
 309   1        count = 1000;
 310   1        TIMER1_MODE_SET(TIMER_16BIT);//TIMER_13BIT,TIMER_8BIT_AUTORELOAD,TIMER_8BIT 
 311   1        TIMER1_CT_MODE_SET(TIME_SELECT);//COUNT_SELECT
 312   1        TIMER1_COUNT_16BIT(count);//TIMER_16BIT
 313   1        timer0_1_init(TIMER1);
 314   1        return;
 315   1      }
 316          
 317          /*
 318          parameter: 
 319            none
 320          return :
 321            none
 322          */
 323          void dqiot_drv_timer1_start(void)
 324          {
 325   1        INT_TIMER1_CLR();
 326   1        TIMER1_IPL_SET(LOW);
 327   1        TIMER1_INT_ENABLE();
 328   1        TIMER1_ENABLE();
 329   1      }
 330          
 331          /*
 332          parameter: 
 333            none
 334          return :
 335            none
 336          */
 337          void dqiot_drv_timer1_stop(void)
 338          {
 339   1        INT_TIMER0_CLR();
 340   1        TIMER0_DISABLE();
 341   1        dqiot_drv_set_timer1_count(0);
 342   1        return;
 343   1      }
 344          
 345          /*
 346          parameter: 
 347            none
 348          return :
 349            none
 350          */
 351          void dqiot_drv_timer2_init(void)
 352          {
 353   1        /*
 354   1           t = prescale*(1000000/32768)*(count+1) us 
 355   1           prescale = 1,65536 
 356   1        */    
 357   1        uint16_t count;
 358   1        count = 3276;
 359   1        TIMER2_CLOCK_SELECT(TIMER2_CLOCK_XTAL);//TIMER2_CLOCK_XTAL选择外部晶振要使能XTAL_32K_ENABLE()
 360   1        TIMER2_AUTO_RELOAD(ENABLE);//ENABLE
 361   1        TIMER2_PRESCALE(TIMER2_PRESCALE_1);//TIMER2_PRESCALE_65536
 362   1        TIMER2_COUNT_SET(count);
 363   1        
C51 COMPILER V9.59.0.0   DQIOT_DRV                                                         03/12/2021 12:09:30 PAGE 7   

 364   1        INT_WDT_TIMER2_CLR();//清除中断标志 
 365   1        TIMER2_IPL_SET(LOW); //中断优先级为低
 366   1        TIMER2_INT_DISABLE();//关闭中断
 367   1        return;
 368   1      }
 369          
 370          /*
 371          parameter: 
 372            none
 373          return :
 374            none
 375          */
 376          void dqiot_drv_timer2_start(void)
 377          {
 378   1        //INT_WDT_TIMER2_CLR();
 379   1        TIMER2_IPL_SET(LOW);
 380   1        TIMER2_INT_ENABLE();
 381   1        TIMER2_ENABLE();
 382   1        return;
 383   1      }
 384          
 385          /*
 386          parameter: 
 387            none
 388          return :
 389            none
 390          */
 391          void dqiot_drv_timer2_stop(void)
 392          {
 393   1        //INT_WDT_TIMER2_CLR();
 394   1        TIMER2_DISABLE();
 395   1        return;
 396   1      }
 397          
 398          
 399          /*
 400          parameter: 
 401            none
 402          return :
 403            none
 404          */
 405          void dqiot_drv_uart0A_init(void)
 406          {
 407   1        GPIOE_BIT_SET(GPIO_PIN_4|GPIO_PIN_5);//避免有毛刺
 408   1          
 409   1        UART0_PORT_SET(UART0_PE4_PE5);
 410   1        UART0_CON2 = 0;
 411   1        UART0_STATE = 0;
 412   1          uart_baudrate_config(UART0,UART_BAUDRATE_57600);//波特率
 413   1        UART0_STOP_MODE(STOP_WIDTH_1BIT);//停止位
 414   1        UART0_DATA_MODE(DATA_MODE_8BIT);//数据位
 415   1        UART0_PARITY_SET(DISABLE); //奇偶校验使能
 416   1        UART0_PARITY_SEL(ODD_PARITY);//奇偶校验选择
 417   1          UART0_MULTI_MODE(DISABLE);//多处理器通信模式
 418   1        
 419   1        UART0_RX_ENABLE();//接收使能 
 420   1      #ifdef __DRV_UART0A_INT_SUPPORT__   
 421   1        UART0_TX_INT_ENABLE();//发送中断使能
 422   1        UART0_RX_INT_ENABLE();//接收中断使能
 423   1        INT_UART0_CLR();//清除中断源标志
 424   1        UART0_IPL_SET(LOW);//中断优先级设置
 425   1        UART0_INT_ENABLE();//中断源  
C51 COMPILER V9.59.0.0   DQIOT_DRV                                                         03/12/2021 12:09:30 PAGE 8   

 426   1      #else
                UART0_TX_INT_DISABLE();//发送中断关闭
                UART0_RX_INT_DISABLE();//接收中断关闭
              #endif
 430   1      
 431   1        // memset(uart_get_buf, 0x00, sizeof(uart_get_buf));
 432   1        // uart_getbuflen = 0;
 433   1      
 434   1        UART0_ENABLE();//使能uart0
 435   1        return;
 436   1      }
 437          
 438          /*
 439          parameter: 
 440            none
 441          return :
 442            none
 443          */
 444          void dqiot_drv_uart0B_init(void)
 445          {
 446   1        GPIOF_BIT_SET(GPIO_PIN_4|GPIO_PIN_5);//避免有毛刺
 447   1          
 448   1        UART0_PORT_SET(UART0_PF4_PF5);
 449   1        UART0_CON2 = 0;
 450   1        UART0_STATE = 0;
 451   1          uart_baudrate_config(UART0,UART_BAUDRATE_57600);//波特率
 452   1        UART0_STOP_MODE(STOP_WIDTH_1BIT);//停止位
 453   1        UART0_DATA_MODE(DATA_MODE_8BIT);//数据位
 454   1        UART0_PARITY_SET(DISABLE); //奇偶校验使能
 455   1        UART0_PARITY_SEL(ODD_PARITY);//奇偶校验选择
 456   1          UART0_MULTI_MODE(DISABLE);//多处理器通信模式
 457   1        
 458   1        UART0_RX_ENABLE();//接收使能 
 459   1      #ifdef __DRV_UART0B_INT_SUPPORT__   
 460   1          //UART0_TX_INT_ENABLE();//发送中断使能
 461   1          UART0_TX_INT_ENABLE();//发送中断关闭
 462   1        UART0_RX_INT_ENABLE();//接收中断使能
 463   1        INT_UART0_CLR();//清除中断源标志
 464   1        UART0_IPL_SET(HIGH);//中断优先级设置
 465   1        UART0_INT_ENABLE();//中断源  
 466   1      #else
                UART0_TX_INT_DISABLE();//发送中断关闭
                UART0_RX_INT_DISABLE();//接收中断关闭
              #endif
 470   1      
 471   1        // memset(uart_get_buf, 0x00, sizeof(uart_get_buf));
 472   1        // uart_getbuflen = 0;
 473   1      
 474   1        UART0_ENABLE();//使能uart0
 475   1        return;
 476   1      }
 477          
 478          /*
 479          parameter: 
 480            none
 481          return :
 482            none
 483          */
 484          void dqiot_drv_uart0_isr(void) interrupt 17
 485          {
 486   1      
 487   1          if(GET_UART0_RX_STATE())
C51 COMPILER V9.59.0.0   DQIOT_DRV                                                         03/12/2021 12:09:30 PAGE 9   

 488   1          {
 489   2            if(uart_getbuflen >= UART0_GET_DATA_LEN )
 490   2              return;
 491   2            else
 492   2              uart_get_buf[uart_getbuflen++] = UART0_BUF;
 493   2            CLR_UART0_RX_STATE();//清除接收中断标志位
 494   2          }
 495   1          //if(GET_UART0_TX_STATE())
 496   1          //{
 497   1          //  CLR_UART0_TX_STATE();//清除发送中断标志位
 498   1          //  UART0_TX_INT_DISABLE();   
 499   1          //}
 500   1      
 501   1      }
 502          
 503          /*
 504          parameter: 
 505            none
 506          return :
 507            none
 508          */
 509          unsigned char dqiot_drv_get_uart0_data(unsigned char len)
 510          {
 511   1        return uart_get_buf[len];
 512   1      }
 513          
 514          /*
 515          parameter: 
 516            none
 517          return :
 518            none
 519          */
 520          void dqiot_drv_clr_uart0_data(void)
 521          {
 522   1        memset(uart_get_buf, 0, sizeof(uart_get_buf));
 523   1        uart_getbuflen = 0;
 524   1      }
 525          
 526          
 527          /*
 528          parameter: 
 529            none
 530          return :
 531            none
 532          */
 533          void dqiot_drv_uart0_sendData(unsigned char *p_data, unsigned char length)
 534          {
 535   1        #if 1
 536   1        unsigned char i = 0;
 537   1        //dqiot_drv_uart0B_init();
 538   1        //memset(uart_send_buf,0x00,sizeof(uart_send_buf));
 539   1        //memcpy(uart_send_buf,p_data,length);
 540   1        //uart_sendbuflen = length;
 541   1      
 542   1        for(i=0;i<length;i++)
 543   1        {
 544   2          uart_tx_byte(UART0,p_data[i]);
 545   2        }
 546   1        #endif
 547   1      }
 548          
 549          char putchar(char c)
C51 COMPILER V9.59.0.0   DQIOT_DRV                                                         03/12/2021 12:09:30 PAGE 10  

 550          {
 551   1           uart_tx_byte(UART0,c);
 552   1           return c;
 553   1      }
 554          
 555          
 556          #endif //__DQIOT_DRV_C__


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    906    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     27       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
