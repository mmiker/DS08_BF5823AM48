C51 COMPILER V9.59.0.0   MMI_FM                                                            04/19/2021 10:41:16 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MMI_FM
OBJECT MODULE PLACED IN .\output\mmi_fm.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE mmi_src\mmi_fm.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include;.\
                    -Library\byd_standard_peripheral\include;.\byd_api\byd_key\include;.\byd_api\byd_mifare\include;.\byd_tool_comm;.\byd_rfi
                    -d;.\mmi_inc) DEBUG PRINT(.\list\mmi_fm.lst) TABS(2) OBJECT(.\output\mmi_fm.obj)

line level    source

   1          #ifndef __MMI_FM_C__
   2          #define __MMI_FM_C__
   3          #include "mmi_feature.h"
   4          #ifdef __FACTORY_TEST_SUPPORT__
   5          #include "mmi_ms.h"
   6          #include "mmi_fm.h"
   7          #include "mmi_audio.h"
   8          #include "mmi_com.h"
   9          #include "mmi_sys.h"
  10          #include "mmi_fps.h"
  11          #include "mmi_rfid.h"
  12          #include "mmi_fs.h"
  13          #include "mmi_key.h"
  14          #include "string.h"
  15          #include "delay.h"
  16          #include "mmi_motor.h"
  17          
  18          unsigned char g_fm_flag = 0;
  19          unsigned char g_fm_project = 0;
  20          static unsigned int g_fm_key_flag = 0;
  21          
  22          unsigned char g_fm_result_name[] = {
  23            STR_ID_KEY,
  24          #ifdef __LOCK_OLED_SUPPORT__
                STR_ID_KEY_LIGHT,
                STR_ID_OLED,
              #endif
  28          #if defined(__LOCK_FP_SUPPORT__) || defined(__LOCK_FP_SUPPORT2__) || defined(__LOCK_FP_SUPPORT1_2__)
  29            STR_ID_FINGERPRINT,
  30          #endif
  31          #ifdef __LOCK_RFID_CARD_SUPPORT__
  32            STR_ID_RF_CARD,
  33          #endif
  34            STR_ID_MOTO,
  35          #ifdef __LOCK_OLED_SUPPORT__
                STR_ID_SOUND,
              #endif
  38            STR_ID_RESET,
  39          };
  40          
  41          #define KEY_ALL (0xFFF)
  42          
  43          /*
  44          parameter: 
  45            none
  46          return :
  47            none
  48          */
  49          void mmi_dq_factory_mode_test_item_select(unsigned char item_num)
  50          {
  51   1        switch (g_fm_result_name[item_num])
  52   1        {
  53   2        case STR_ID_KEY:
C51 COMPILER V9.59.0.0   MMI_FM                                                            04/19/2021 10:41:16 PAGE 2   

  54   2          mmi_dq_aud_play_with_id(AUD_ID_FM_KEY_INPUT);
  55   2          if (mmi_dq_fs_get_factory_flag() != 0)
  56   2            mmi_dq_aud_play_with_id(AUD_ID_INPUT_BACK);
  57   2          g_fm_key_flag = 0;
  58   2          break;
  59   2      #ifdef __LOCK_OLED_SUPPORT__
                case STR_ID_KEY_LIGHT:
                  break;
                case STR_ID_OLED:
                  break;
              #endif
  65   2      #if defined(__LOCK_FP_SUPPORT__) || defined(__LOCK_FP_SUPPORT2__) || defined(__LOCK_FP_SUPPORT1_2__)
  66   2        case STR_ID_FINGERPRINT:
  67   2          mmi_ms_opt_time_init();
  68   2          mmi_dq_aud_play_with_id(AUD_ID_PRESS_FP);
  69   2          if (mmi_dq_fs_get_factory_flag() != 0)
  70   2            mmi_dq_aud_play_with_id(AUD_ID_INPUT_BACK);
  71   2          break;
  72   2      #endif
  73   2      #ifdef __LOCK_RFID_CARD_SUPPORT__
  74   2        case STR_ID_RF_CARD:
  75   2          mmi_ms_opt_time_init();
  76   2          mmi_dq_aud_play_with_id(AUD_ID_PRESS_RFCARD);
  77   2          if (mmi_dq_fs_get_factory_flag() != 0)
  78   2            mmi_dq_aud_play_with_id(AUD_ID_INPUT_BACK);
  79   2          break;
  80   2      #endif
  81   2        case STR_ID_MOTO:
  82   2          mmi_dq_aud_play_with_id(AUD_ID_FM_MOTO);
  83   2      #ifdef __LOCK_MOTOR_SUPPORT__
  84   2          mmi_dq_factory_mode_motor_test();
  85   2      #endif
  86   2          break;
  87   2      #ifdef __LOCK_OLED_SUPPORT__
                case STR_ID_SOUND:
                  break;
              #endif
  91   2        case STR_ID_RESET:
  92   2          mmi_dq_aud_play_with_id(AUD_ID_FM_RESET);
  93   2          if (mmi_dq_fs_get_factory_flag() != 0)
  94   2            mmi_dq_aud_play_with_id(AUD_ID_INPUT_BACK);
  95   2          break;
  96   2        default:
  97   2          break;
  98   2        }
  99   1        g_fm_project = g_fm_result_name[item_num];
 100   1      }
 101          
 102          /*
 103          parameter: 
 104            none
 105          return :
 106            none
 107          */
 108          void mmi_dq_factory_mode_test_item_result(unsigned char item_name, unsigned char result)
 109          {
 110   1        unsigned char max = sizeof(g_fm_result_name) / sizeof(unsigned char);
 111   1        unsigned char i = 0;
 112   1        for (i = 0; i < max; i++)
 113   1        {
 114   2          if (g_fm_result_name[i] == item_name)
 115   2            break;
C51 COMPILER V9.59.0.0   MMI_FM                                                            04/19/2021 10:41:16 PAGE 3   

 116   2        }
 117   1      
 118   1        g_fm_flag += (result << i);
 119   1      
 120   1        i++;
 121   1        if (i < max)
 122   1          mmi_dq_factory_mode_test_item_select(i);
 123   1        else
 124   1        {
 125   2          mmi_dq_fs_set_factory_flag(g_fm_flag);
 126   2          mmi_dq_factory_mode_test_stop();
 127   2        }
 128   1      }
 129          
 130          /*
 131          parameter: 
 132            none
 133          return :
 134            none
 135          */
 136          unsigned char mmi_dq_factory_mode_get_test_project(void)
 137          {
 138   1        return g_fm_project;
 139   1      }
 140          
 141          /*
 142          parameter: 
 143            none
 144          return :
 145            none
 146          */
 147          void mmi_dq_factory_mode_test_start(void)
 148          {
 149   1        g_fm_flag = 0;
 150   1        mmi_dq_factory_mode_test_item_select(0);
 151   1        mmi_dq_ms_set_sys_state(SYS_STATUS_FM_MODE);
 152   1        return;
 153   1      }
 154          
 155          /*
 156          parameter: 
 157            none
 158          return :
 159            none
 160          */
 161          void mmi_dq_factory_mode_test_stop(void)
 162          {
 163   1        //if(mmi_dq_fs_get_factory_flag()!=0)
 164   1        {
 165   2          if (mmi_dq_fs_get_admin_status() == 0)
 166   2            mmi_dq_sys_add_admin_pwd();
 167   2          else
 168   2            mmi_dq_ms_set_sys_state(SYS_STATUS_IDLE);
 169   2        }
 170   1        return;
 171   1      }
 172          
 173          /*
 174          parameter: 
 175            none
 176          return :
 177            none
C51 COMPILER V9.59.0.0   MMI_FM                                                            04/19/2021 10:41:16 PAGE 4   

 178          */
 179          void mmi_dq_factory_mode_key_test(unsigned char key_value)
 180          {
 181   1        static unsigned char touch_out_count = 0;
 182   1        if (key_value == KEY_S && mmi_dq_fs_get_factory_flag() != 0)
 183   1        {
 184   2          if (g_fm_key_flag == 0)
 185   2          {
 186   3            touch_out_count = 0;
 187   3            mmi_dq_factory_mode_test_stop();
 188   3          }
 189   2          else
 190   2          {
 191   3            touch_out_count++;
 192   3            if (touch_out_count > 2)
 193   3            {
 194   4              touch_out_count = 0;
 195   4              mmi_dq_factory_mode_test_stop();
 196   4            }
 197   3          }
 198   2        }
 199   1        g_fm_key_flag |= (1 << key_value);
 200   1        if (g_fm_key_flag == KEY_ALL)
 201   1          mmi_dq_factory_mode_test_item_result(STR_ID_KEY, 1);
 202   1      }
 203          
 204          /*
 205          parameter: 
 206            none
 207          return :
 208            none
 209          */
 210          void mmi_dq_factory_mode_fp_test(void)
 211          {
 212   1        mmi_dq_factory_mode_test_item_result(STR_ID_FINGERPRINT, 1);
 213   1      }
 214          
 215          /*
 216          parameter: 
 217            none
 218          return :
 219            none
 220          */
 221          void mmi_dq_factory_mode_rfid_test(void)
 222          {
 223   1        mmi_dq_factory_mode_test_item_result(STR_ID_RF_CARD, 1);
 224   1      }
 225          
 226          #ifdef __LOCK_MOTOR_SUPPORT__
 227          /*
 228          parameter: 
 229            none
 230          return :
 231            none
 232          */
 233          void mmi_dq_factory_mode_motor_test(void)
 234          {
 235   1        mmi_dq_motor_turn_right();
 236   1        delay_ms(300);
 237   1        mmi_dq_motor_stop();
 238   1      }
 239          #endif
C51 COMPILER V9.59.0.0   MMI_FM                                                            04/19/2021 10:41:16 PAGE 5   

 240          
 241          #ifdef __LOCK_MOTOR_SUPPORT__
 242          /*
 243          parameter: 
 244            none
 245          return :
 246            none
 247          */
 248          void mmi_dq_factory_mode_motor_test_back(void)
 249          {
 250   1        mmi_dq_motor_turn_back();
 251   1        delay_ms(300);
 252   1        mmi_dq_motor_stop();
 253   1      }
 254          #endif
 255          
 256          /*
 257          parameter: 
 258            none
 259          return :
 260            none
 261          */
 262          void mmi_dq_factory_mode_reset_test(void)
 263          {
 264   1        mmi_dq_factory_mode_test_item_result(STR_ID_RESET, 1);
 265   1      }
 266          #endif
 267          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    393    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     14       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
