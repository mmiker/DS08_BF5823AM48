C51 COMPILER V9.59.0.0   MMI_FM                                                            04/27/2021 12:00:50 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MMI_FM
OBJECT MODULE PLACED IN .\output\mmi_fm.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE mmi_src\mmi_fm.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include;.\
                    -Library\byd_standard_peripheral\include;.\byd_api\byd_key\include;.\byd_api\byd_mifare\include;.\byd_tool_comm;.\byd_rfi
                    -d;.\mmi_inc) DEBUG PRINT(.\list\mmi_fm.lst) TABS(2) OBJECT(.\output\mmi_fm.obj)

line level    source

   1          #ifndef __MMI_FM_C__
   2          #define __MMI_FM_C__
   3          #include "mmi_feature.h"
   4          #ifdef __FACTORY_TEST_SUPPORT__
   5          #include "mmi_ms.h"
   6          #include "mmi_fm.h"
   7          #include "mmi_audio.h"
   8          #include "mmi_com.h"
   9          #include "mmi_sys.h"
  10          #include "mmi_fps.h"
  11          #include "mmi_rfid.h"
  12          #include "mmi_fs.h"
  13          #include "mmi_key.h"
  14          #include "string.h"
  15          #include "delay.h"
  16          #include "mmi_motor.h"
  17          
  18          unsigned char g_fm_flag = 0;
  19          unsigned char g_fm_project = 0;
  20          static unsigned int g_fm_key_flag = 0;
  21          
  22          unsigned char g_fm_result_name[] = {
  23            STR_ID_KEY,
  24          #ifdef __LOCK_OLED_SUPPORT__
                STR_ID_KEY_LIGHT,
                STR_ID_OLED,
              #endif
  28          #if defined(__LOCK_FP_SUPPORT__) || defined(__LOCK_FP_SUPPORT2__) || defined(__LOCK_FP_SUPPORT1_2__)
                STR_ID_FINGERPRINT,
              #endif
  31          #ifdef __LOCK_RFID_CARD_SUPPORT__
  32            STR_ID_RF_CARD,
  33          #endif
  34            STR_ID_MOTO,
  35          #ifdef __LOCK_OLED_SUPPORT__
                STR_ID_SOUND,
              #endif
  38            STR_ID_RESET,
  39          };
  40          
  41          #define KEY_ALL (0xFFF)
  42          
  43          /*
  44          parameter: 
  45            none
  46          return :
  47            none
  48          */
  49          void mmi_dq_factory_mode_test_item_select(unsigned char item_num)
  50          {
  51   1        switch (g_fm_result_name[item_num])
  52   1        {
  53   2        case STR_ID_KEY:
C51 COMPILER V9.59.0.0   MMI_FM                                                            04/27/2021 12:00:50 PAGE 2   

  54   2      #ifdef __LOCK_AUDIO_SUPPORT__
  55   2          mmi_dq_aud_play_with_id(AUD_ID_FM_KEY_INPUT);
  56   2      #endif
  57   2          if (mmi_dq_fs_get_factory_flag() != 0)
  58   2      #ifdef __LOCK_AUDIO_SUPPORT__
  59   2            mmi_dq_aud_play_with_id(AUD_ID_INPUT_BACK)
  60   2      #endif
  61   2              ;
  62   2          g_fm_key_flag = 0;
  63   2          break;
  64   2      #ifdef __LOCK_OLED_SUPPORT__
                case STR_ID_KEY_LIGHT:
                  break;
                case STR_ID_OLED:
                  break;
              #endif
  70   2      #if defined(__LOCK_FP_SUPPORT__) || defined(__LOCK_FP_SUPPORT2__) || defined(__LOCK_FP_SUPPORT1_2__)
                case STR_ID_FINGERPRINT:
                  mmi_ms_opt_time_init();
              #ifdef __LOCK_AUDIO_SUPPORT__
                  mmi_dq_aud_play_with_id(AUD_ID_PRESS_FP);
              #endif
                  if (mmi_dq_fs_get_factory_flag() != 0)
              #ifdef __LOCK_AUDIO_SUPPORT__
                    mmi_dq_aud_play_with_id(AUD_ID_INPUT_BACK)
              #endif
                      ;
                  break;
              #endif
  83   2      #ifdef __LOCK_RFID_CARD_SUPPORT__
  84   2        case STR_ID_RF_CARD:
  85   2          mmi_ms_opt_time_init();
  86   2      #ifdef __LOCK_AUDIO_SUPPORT__
  87   2          mmi_dq_aud_play_with_id(AUD_ID_PRESS_RFCARD);
  88   2      #endif
  89   2          if (mmi_dq_fs_get_factory_flag() != 0)
  90   2      #ifdef __LOCK_AUDIO_SUPPORT__
  91   2            mmi_dq_aud_play_with_id(AUD_ID_INPUT_BACK)
  92   2      #endif
  93   2              ;
  94   2          break;
  95   2      #endif
  96   2        case STR_ID_MOTO:
  97   2      #ifdef __LOCK_AUDIO_SUPPORT__
  98   2          mmi_dq_aud_play_with_id(AUD_ID_FM_MOTO);
  99   2      #endif
 100   2      #ifdef __LOCK_MOTOR_SUPPORT__
 101   2          mmi_dq_factory_mode_motor_test();
 102   2      #endif
 103   2          break;
 104   2      #ifdef __LOCK_OLED_SUPPORT__
                case STR_ID_SOUND:
                  break;
              #endif
 108   2        case STR_ID_RESET:
 109   2      #ifdef __LOCK_AUDIO_SUPPORT__
 110   2          mmi_dq_aud_play_with_id(AUD_ID_FM_RESET);
 111   2      #endif
 112   2          if (mmi_dq_fs_get_factory_flag() != 0)
 113   2      #ifdef __LOCK_AUDIO_SUPPORT__
 114   2            mmi_dq_aud_play_with_id(AUD_ID_INPUT_BACK)
 115   2      #endif
C51 COMPILER V9.59.0.0   MMI_FM                                                            04/27/2021 12:00:50 PAGE 3   

 116   2              ;
 117   2          break;
 118   2        default:
 119   2          break;
 120   2        }
 121   1        g_fm_project = g_fm_result_name[item_num];
 122   1      }
 123          
 124          /*
 125          parameter: 
 126            none
 127          return :
 128            none
 129          */
 130          void mmi_dq_factory_mode_test_item_result(unsigned char item_name, unsigned char result)
 131          {
 132   1        unsigned char max = sizeof(g_fm_result_name) / sizeof(unsigned char);
 133   1        unsigned char i = 0;
 134   1        for (i = 0; i < max; i++)
 135   1        {
 136   2          if (g_fm_result_name[i] == item_name)
 137   2            break;
 138   2        }
 139   1      
 140   1        g_fm_flag += (result << i);
 141   1      
 142   1        i++;
 143   1        if (i < max)
 144   1          mmi_dq_factory_mode_test_item_select(i);
 145   1        else
 146   1        {
 147   2          mmi_dq_fs_set_factory_flag(g_fm_flag);
 148   2          mmi_dq_factory_mode_test_stop();
 149   2        }
 150   1      }
 151          
 152          /*
 153          parameter: 
 154            none
 155          return :
 156            none
 157          */
 158          unsigned char mmi_dq_factory_mode_get_test_project(void)
 159          {
 160   1        return g_fm_project;
 161   1      }
 162          
 163          /*
 164          parameter: 
 165            none
 166          return :
 167            none
 168          */
 169          void mmi_dq_factory_mode_test_start(void)
 170          {
 171   1        g_fm_flag = 0;
 172   1        mmi_dq_factory_mode_test_item_select(0);
 173   1        mmi_dq_ms_set_sys_state(SYS_STATUS_FM_MODE);
 174   1        return;
 175   1      }
 176          
 177          /*
C51 COMPILER V9.59.0.0   MMI_FM                                                            04/27/2021 12:00:50 PAGE 4   

 178          parameter: 
 179            none
 180          return :
 181            none
 182          */
 183          void mmi_dq_factory_mode_test_stop(void)
 184          {
 185   1        //if(mmi_dq_fs_get_factory_flag()!=0)
 186   1        {
 187   2          if (mmi_dq_fs_get_admin_status() == 0)
 188   2            mmi_dq_sys_add_admin_pwd();
 189   2          else
 190   2            mmi_dq_ms_set_sys_state(SYS_STATUS_IDLE);
 191   2        }
 192   1        return;
 193   1      }
 194          
 195          /*
 196          parameter: 
 197            none
 198          return :
 199            none
 200          */
 201          void mmi_dq_factory_mode_key_test(unsigned char key_value)
 202          {
 203   1        static unsigned char touch_out_count = 0;
 204   1        if (key_value == KEY_S && mmi_dq_fs_get_factory_flag() != 0)
 205   1        {
 206   2          if (g_fm_key_flag == 0)
 207   2          {
 208   3            touch_out_count = 0;
 209   3            mmi_dq_factory_mode_test_stop();
 210   3          }
 211   2          else
 212   2          {
 213   3            touch_out_count++;
 214   3            if (touch_out_count > 2)
 215   3            {
 216   4              touch_out_count = 0;
 217   4              mmi_dq_factory_mode_test_stop();
 218   4            }
 219   3          }
 220   2        }
 221   1        g_fm_key_flag |= (1 << key_value);
 222   1        if (g_fm_key_flag == KEY_ALL)
 223   1          mmi_dq_factory_mode_test_item_result(STR_ID_KEY, 1);
 224   1      }
 225          
 226          /*
 227          parameter: 
 228            none
 229          return :
 230            none
 231          */
 232          void mmi_dq_factory_mode_fp_test(void)
 233          {
 234   1        mmi_dq_factory_mode_test_item_result(STR_ID_FINGERPRINT, 1);
 235   1      }
 236          
 237          /*
 238          parameter: 
 239            none
C51 COMPILER V9.59.0.0   MMI_FM                                                            04/27/2021 12:00:50 PAGE 5   

 240          return :
 241            none
 242          */
 243          void mmi_dq_factory_mode_rfid_test(void)
 244          {
 245   1        mmi_dq_factory_mode_test_item_result(STR_ID_RF_CARD, 1);
 246   1      }
 247          
 248          #ifdef __LOCK_MOTOR_SUPPORT__
 249          /*
 250          parameter: 
 251            none
 252          return :
 253            none
 254          */
 255          void mmi_dq_factory_mode_motor_test(void)
 256          {
 257   1        mmi_dq_motor_turn_right();
 258   1        delay_ms(300);
 259   1        mmi_dq_motor_stop();
 260   1      }
 261          #endif
 262          
 263          #ifdef __LOCK_MOTOR_SUPPORT__
 264          /*
 265          parameter: 
 266            none
 267          return :
 268            none
 269          */
 270          void mmi_dq_factory_mode_motor_test_back(void)
 271          {
 272   1        mmi_dq_motor_turn_back();
 273   1        delay_ms(300);
 274   1        mmi_dq_motor_stop();
 275   1      }
 276          #endif
 277          
 278          /*
 279          parameter: 
 280            none
 281          return :
 282            none
 283          */
 284          void mmi_dq_factory_mode_reset_test(void)
 285          {
 286   1        mmi_dq_factory_mode_test_item_result(STR_ID_RESET, 1);
 287   1      }
 288          #endif
 289          #endif


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    373    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      9       2
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   MMI_FM                                                            04/27/2021 12:00:50 PAGE 6   

   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
