C51 COMPILER V9.59.0.0   MMI_AUDIO                                                         02/19/2021 17:34:45 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MMI_AUDIO
OBJECT MODULE PLACED IN .\output\mmi_audio.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE mmi_src\mmi_audio.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include
                    -;.\Library\byd_standard_peripheral\include;.\byd_api\byd_key\include;.\byd_api\byd_mifare\include;.\byd_tool_comm;.\byd_
                    -rfid;.\mmi_inc) DEBUG PRINT(.\list\mmi_audio.lst) TABS(2) OBJECT(.\output\mmi_audio.obj)

line level    source

   1          #ifndef __MMI_AUD_C__
   2          #define __MMI_AUD_C__
   3          
   4          #include "mmi_audio.h"
   5          #include "dqiot_drv_audio.h"
   6          #include "mmi_com.h"
   7          
   8          #ifdef __LOCK_AUDIO_SUPPORT__
   9          #ifdef __AUD_PLAY_BY_ARR__
  10          
  11          const unsigned char aud_play_arr[] = 
  12          {
  13            AUD_BASE_ID_INPUT_68_PWD,AUD_BASE_ID_INPUT_END,0,   //AUD_ID_INPUT_68_PWD = 0,//«Î ‰»Î6-8Œª√‹¬Î£¨∞¥#º¸Ω· ¯
  14            AUD_BASE_ID_PWD_68_LEN,AUD_BASE_ID_REINPUT,0,     //AUD_ID_PWD_68_LEN = 3,//√‹¬Î”¶Œ™6-8Œª£¨«Î÷ÿ–¬ ‰»Î
  15            AUD_BASE_ID_PWD_INPUT_AGAIN,AUD_BASE_ID_INPUT_END,0,  //AUD_ID_PWD_INPUT_AGAIN = 6,//«Î‘Ÿ¥Œ ‰»Î√‹¬Î£¨∞¥#º¸
             -Ω· ¯
  16            AUD_BASE_ID_CONTINUE,AUD_BASE_ID_INPUT_BACK,0,      //AUD_ID_CONTINUE = 9,//ºÃ–¯«Î∞¥#£¨∑µªÿ∞¥*
  17            AUD_BASE_ID_FAIL,AUD_BASE_ID_CONTACT_ADMIN,0,     //AUD_ID_ADD_PWD_FAIL = 12,//ÃÌº” ß∞‹£¨«Î¡™œµπ‹¿Ì‘±
  18            AUD_BASE_ID_INPUT_OLD_PWD,AUD_BASE_ID_INPUT_END,0,    //AUD_ID_INPUT_OLD_PWD = 15,//«Î ‰»Îæ…√‹¬Î£¨∞¥#º¸Ω· ¯
  19            AUD_BASE_ID_PWD_NOT_EXIST,AUD_BASE_ID_REINPUT,0,    //AUD_ID_PWD_NOT_EXIST = 18,//√‹¬Î≤ª¥Ê‘⁄£¨«Î÷ÿ–¬ ‰»Î
  20            AUD_BASE_ID_INPUT_NEW_PWD,AUD_BASE_ID_INPUT_END,0,    //AUD_ID_INPUT_NEW_PWD = 21,//«Î ‰»Î–¬√‹¬Î£¨∞¥#º¸Ω· ¯
  21            AUD_BASE_ID_PWD_INPUT_AGAIN,AUD_BASE_ID_INPUT_END,0,  //AUD_ID_INPUT_NEW_PWD_AGAIN = 24,//«Î‘Ÿ ‰»Î–¬√‹¬Î£¨
             -∞¥#º¸Ω· ¯
  22                                        //AUD_ID_CHG_FAIL = 12,//–ﬁ∏ƒ ß∞‹£¨«Î¡™œµπ‹¿Ì‘±
  23                                        //AUD_ID_DEL_FAIL = 12,//…æ≥˝ ß∞‹£¨«Î¡™œµπ‹¿Ì‘±
  24            AUD_BASE_ID_INPUT_DEL_PWD,AUD_BASE_ID_INPUT_END,0,    //AUD_ID_INPUT_DEL_NUM = 27,//«Î ‰»Î“™…æ≥˝µƒ±‡∫≈ªÚ√‹¬
             -Î£¨∞¥#º¸Ω· ¯
  25            AUD_BASE_ID_NUM_NOT_EXIST,AUD_BASE_ID_REINPUT,0,    //AUD_ID_NUM_NOT_EXIST = 30,//±‡∫≈≤ª¥Ê‘⁄£¨«Î÷ÿ–¬ ‰»Î
  26            AUD_BASE_ID_INPUT_CONFIRM,AUD_BASE_ID_INPUT_BACK,0,   //AUD_ID_DEL_PWD_CONFIRM = 33,//∫≈√‹¬Î∞¥#º¸»∑»œ…æ≥˝£
             -¨»°œ˚«Î∞¥*º¸
  27                                        //AUD_ID_DEL_CONFIRM = 9,//ºÃ–¯…æ≥˝«Î∞¥#£¨∑µªÿ«Î∞¥*
  28                                        //AUD_ID_CLR_PWD_CONFIRM = 33,//∞¥#º¸»∑»œ…æ≥˝À˘”–√‹¬Î£¨»°œ˚«Î∞¥*º¸
  29            AUD_BASE_ID_FAIL,AUD_BASE_ID_RETRY,0,         //AUD_ID_ADD_FAIL_RETRY = 36,//ÃÌº” ß∞‹£¨«Î÷ÿ ‘
  30                                        //AUD_ID_CHG_FAIL_RETRY = 36,//–ﬁ∏ƒ ß∞‹£¨«Î÷ÿ ‘
  31                                        //AUD_ID_CHG_CONTINUE_CONFIRM = 9,//ºÃ–¯–ﬁ∏ƒ«Î∞¥#£¨∑µªÿ«Î∞¥*
  32            //0x27
  33            AUD_BASE_ID_FP_NOT_EXIST,AUD_BASE_ID_REINPUT,0,     //AUD_ID_FP_NOT_EXIST = 39,//÷∏Œ∆≤ª¥Ê‘⁄£¨«Î÷ÿ–¬ ‰»Î
  34                                        //AUD_ID_DEL_FP_CONFIRM = 33,//∫≈÷∏Œ∆∞¥#»∑»œ…æ≥˝£¨»°œ˚«Î∞¥*
  35                                        //AUD_ID_DEL_FAIL_RETRY = 36,//…æ≥˝ ß∞‹£¨«Î÷ÿ ‘
  36                                        //AUD_ID_CLR_FP_CONFIRM = 33,//∞¥#»∑»œ…æ≥˝À˘”–÷∏Œ∆£¨»°œ˚«Î∞¥*
  37            AUD_BASE_ID_RFCARD_NOT_EXIST,AUD_BASE_ID_REINPUT,0,   //AUD_ID_RFCARD_NOT_EXIST = 42,//RFø®≤ª¥Ê‘⁄£¨«Î÷ÿ–¬ 
             -‰»Î
  38                                        //AUD_ID_DEL_RFCARD_CONFIRM = 33,//∫≈RFø®∞¥#»∑»œ…æ≥˝£¨»°œ˚«Î∞¥*
  39                                        //AUD_ID_CLR_RFCARD_CONFIRM = 33,//∞¥#»∑»œ…æ≥˝À˘”–RFø®£¨»°œ˚«Î∞¥*
  40            AUD_BASE_ID_INPUT_ADMIN_PWD,AUD_BASE_ID_INPUT_END,0,  //AUD_ID_INPUT_ADMIN_PWD = 45,//«Î ‰»Îπ‹¿Ì‘±√‹¬Î£¨∞¥
             -#º¸Ω· ¯
  41                                        //AUD_ID_INPUT_NEW_ADMIN_PWD = 0,//«Î ‰»Î–¬π‹¿Ì‘±√‹¬Î£¨∞¥#º¸Ω· ¯
  42            //
  43                                        //AUD_ID_INPUT_NEW_ADMIN_PWD_AGAIN = 6,//«Î‘Ÿ¥Œ ‰»Î–¬π‹¿Ì‘±√‹¬Î£¨∞¥#º¸Ω· ¯
  44            AUD_BASE_ID_PWD_EXIST,AUD_BASE_ID_REINPUT,0,      //AUD_ID_PWD_EXIST = 48,//√‹¬Î“—¥Ê‘⁄£¨«Î÷ÿ–¬ ‰»Î
  45            AUD_BASE_ID_ADD_ADMIN_PWD_FIRST,AUD_BASE_ID_INPUT_END,0,//AUD_ID_ADD_ADMIN_PWD_FIRST = 51,//Œ™¡Àƒ˙µƒ π”√∞
             -≤»´£¨«Îœ»ÃÌº”π‹¿Ì‘±√‹¬Î£¨∞¥#º¸Ω· ¯
  46                                        //AUD_ID_INPUT_ADMIN_PWD_INIT_AGAIN = 6,//«Î‘Ÿ¥Œ ‰»Îπ‹¿Ì‘±√‹¬Î£¨∞¥#º¸Ω· ¯
C51 COMPILER V9.59.0.0   MMI_AUDIO                                                         02/19/2021 17:34:45 PAGE 2   

  47            AUD_BASE_ID_PWD_WRONG,AUD_BASE_ID_RETRY,0,        //AUD_ID_PWD_WRONG_TRY = 54,//√‹¬Î¥ÌŒÛ,«Î÷ÿ ‘
  48            AUD_BASE_ID_FP_WRONG,AUD_BASE_ID_RETRY,0,       //AUD_ID_FP_WRONG_TRY = 57,//÷∏Œ∆¥ÌŒÛ£¨«Î÷ÿ ‘
  49            AUD_BASE_ID_RFCARD_WRONG,AUD_BASE_ID_RETRY,0,     //AUD_ID_RFCARD_WRONG_TRY = 60,//RFø®¥ÌŒÛ£¨«Î÷ÿ ‘
  50            //
  51            AUD_BASE_ID_SYS_NUM_1,AUD_BASE_ID_SYS_CHG_ADMIN_PWD,
  52            AUD_BASE_ID_SYS_NUM_2,AUD_BASE_ID_SYS_CHG_ADMIN_FP,AUD_BASE_ID_INPUT_BACK,0,    //AUD_ID_SYS_ADMIN = 63,//π
             -‹¿Ì‘±
  53            AUD_BASE_ID_SYS_NUM_1,AUD_BASE_ID_SYS_PRO_AUDIO,
  54            AUD_BASE_ID_SYS_NUM_2,AUD_BASE_ID_SYS_OPEN_MODE,AUD_BASE_ID_INPUT_BACK,0, //AUD_ID_SYS_SETTING = 69,//…Ë÷
             -√
  55            AUD_BASE_ID_SYS_NUM_1,AUD_BASE_ID_SYS_NO1_ADMIN_FP,
  56            AUD_BASE_ID_SYS_NUM_2,AUD_BASE_ID_SYS_NO2_ADMIN_FP,AUD_BASE_ID_INPUT_BACK,0,    //AUD_ID_SYS_CHG_ADMIN_FP =
             - 75,//–ﬁ∏ƒπ‹¿Ì‘±÷∏Œ∆
  57            AUD_BASE_ID_SYS_NUM_1,AUD_BASE_ID_SYS_OPEN_PRO_AUDIO,
  58            AUD_BASE_ID_SYS_NUM_2,AUD_BASE_ID_SYS_CLOSE_PRO_AUDIO,AUD_BASE_ID_INPUT_BACK,0,   //AUD_ID_SYS_PRO_AUDIO =
             - 81,//Ã· æ“Ù
  59            AUD_BASE_ID_SYS_NUM_1,AUD_BASE_ID_SYS_SIN_OPEN_MODE,
  60            AUD_BASE_ID_SYS_NUM_2,AUD_BASE_ID_SYS_DBL_OPEN_MODE,AUD_BASE_ID_INPUT_BACK,0,//AUD_ID_SYS_OPEN_MODE = 87,
             -//ø™√≈∑Ω Ω
  61          
  62            AUD_BASE_ID_SYS_NUM_1,AUD_BASE_ID_SYS_ADMIN,
  63            AUD_BASE_ID_SYS_NUM_2,AUD_BASE_ID_SYS_SETTING,
  64            AUD_BASE_ID_SYS_NUM_3,AUD_BASE_ID_SYS_RESTORE,AUD_BASE_ID_INPUT_BACK,0,   //AUD_ID_SYSTEM2 = 93,//œµÕ≥2
  65          
  66            AUD_BASE_ID_SYS_NUM_1,AUD_BASE_ID_SYS_ADD_PWD,
  67            AUD_BASE_ID_SYS_NUM_2,AUD_BASE_ID_SYS_DEL_PWD,
  68            AUD_BASE_ID_SYS_NUM_3,AUD_BASE_ID_SYS_CLR_PWD,AUD_BASE_ID_INPUT_BACK,0,   //AUD_ID_SYS_PASSWORD = 101,//√‹
             -¬Î
  69            AUD_BASE_ID_SYS_NUM_1,AUD_BASE_ID_SYS_ADD_FP,
  70            AUD_BASE_ID_SYS_NUM_2,AUD_BASE_ID_SYS_DEL_FP,
  71            AUD_BASE_ID_SYS_NUM_3,AUD_BASE_ID_SYS_CLR_FP,AUD_BASE_ID_INPUT_BACK,0,      //AUD_ID_SYS_FP = 109,//÷∏Œ∆
  72            AUD_BASE_ID_SYS_NUM_1,AUD_BASE_ID_SYS_ADD_RFCARD,
  73            AUD_BASE_ID_SYS_NUM_2,AUD_BASE_ID_SYS_DEL_RFCARD,
  74            AUD_BASE_ID_SYS_NUM_3,AUD_BASE_ID_SYS_CLR_RFCARD,AUD_BASE_ID_INPUT_BACK,0,    //AUD_ID_SYS_RFCARD = 117,//R
             -Fø®
  75          
  76          
  77            AUD_BASE_ID_NOT_SAME,AUD_BASE_ID_REINPUT,0,//AUD_ID_PWD_NOT_SAME_RETRY   = 125//¡Ω¥Œ ‰»Îµƒ√‹¬Î≤ª“ª÷¬,«Î÷ÿ–
             -¬ ‰»Î
  78          
  79            AUD_BASE_ID_SYS_NUM_1,AUD_BASE_ID_SYS_CHG_ADMIN_PWD,
  80            AUD_BASE_ID_INPUT_BACK,0,   //AUD_ID_SYS_ADMIN2 = 128,//π‹¿Ì‘±
  81          #if 1
  82          #ifdef __LOCK_RFID_CARD_SUPPORT__ 
  83          #if defined(__LOCK_FP_SUPPORT__)||defined(__LOCK_FP_SUPPORT2__)||defined(__LOCK_FP_SUPPORT1_2__)
  84            AUD_BASE_ID_SYS_NUM_1,AUD_BASE_ID_SYS_PASSWORD,
  85            AUD_BASE_ID_SYS_NUM_2,AUD_BASE_ID_SYS_FP,
  86            AUD_BASE_ID_SYS_NUM_3,AUD_BASE_ID_SYS_RFCARD,
  87            AUD_BASE_ID_SYS_NUM_4,AUD_BASE_ID_SYS_ADMIN,
  88            AUD_BASE_ID_SYS_NUM_5,AUD_BASE_ID_SYS_SETTING,
  89            AUD_BASE_ID_SYS_NUM_6,AUD_BASE_ID_SYS_RESTORE,AUD_BASE_ID_INPUT_BACK,0,   //AUD_ID_SYSTEM = 132,//œµÕ≥
  90          #else 
                AUD_BASE_ID_SYS_NUM_1,AUD_BASE_ID_SYS_PASSWORD,
                AUD_BASE_ID_SYS_NUM_2,AUD_BASE_ID_SYS_RFCARD,
                AUD_BASE_ID_SYS_NUM_3,AUD_BASE_ID_SYS_ADMIN,
                AUD_BASE_ID_SYS_NUM_4,AUD_BASE_ID_SYS_SETTING,
                AUD_BASE_ID_SYS_NUM_5,AUD_BASE_ID_SYS_RESTORE,AUD_BASE_ID_INPUT_BACK,0,   //AUD_ID_SYSTEM = 132,//œµÕ≥
              #endif
  97          #else
                AUD_BASE_ID_SYS_NUM_1,AUD_BASE_ID_SYS_PASSWORD,
                AUD_BASE_ID_SYS_NUM_2,AUD_BASE_ID_SYS_FP,
                AUD_BASE_ID_SYS_NUM_3,AUD_BASE_ID_SYS_ADMIN,
C51 COMPILER V9.59.0.0   MMI_AUDIO                                                         02/19/2021 17:34:45 PAGE 3   

                AUD_BASE_ID_SYS_NUM_4,AUD_BASE_ID_SYS_SETTING,
                AUD_BASE_ID_SYS_NUM_5,AUD_BASE_ID_SYS_RESTORE,AUD_BASE_ID_INPUT_BACK,0,   //AUD_ID_SYSTEM = 132,//œµÕ≥
              #endif
 104          #endif
 105          
 106            //AUD_BASE_ID_SYS_DBL_OPEN_MODE,AUD_BASE_ID_PRESS_FP,0,//AUD_ID_DBL_OPEN_MODE_FP = 145
 107            //AUD_BASE_ID_SYS_DBL_OPEN_MODE,AUD_BASE_ID_INPUT_68_PWD,0,//AUD_ID_DBL_OPEN_MODE_PASSWORD = 148
 108          
 109                //AUD_ID_ADD_PWD_FULL = 12,//√‹¬Î“—¬˙£¨«Î¡™œµπ‹¿Ì‘±
 110                //AUD_ID_FP_ADD_FULL = 12,//÷∏Œ∆“—¬˙£¨«Î¡™œµπ‹¿Ì‘±
 111                //AUD_ID_RFCARD_FULL = 12,//RFø®“—¬˙£¨«Î¡™œµπ‹¿Ì‘±
 112          };
 113          
 114          
 115          #endif
 116          
 117          
 118          /*
 119          parameter: 
 120            none
 121          return :
 122            none
 123          */
 124          void mmi_dq_aud_init(void)
 125          {
 126   1        dqiot_drv_audio_init();
 127   1      }
 128          
 129          /*
 130          parameter: 
 131            none
 132          return :
 133            none
 134          */
 135          AUD_PLAY_ID mmi_dq_aud_get_audio_id(unsigned char text_id)
 136          {
 137   1        unsigned char i = 0;
 138   1        
 139   1        for(i=0;msg_aud_list[i].msg_id<STR_ID_MAX_COUNT;i++)
 140   1        {
 141   2          if(msg_aud_list[i].msg_id == text_id)
 142   2          {
 143   3            break;
 144   3          }
 145   2        }
 146   1      
 147   1        return msg_aud_list[i].aud_id;
 148   1      }
 149          
 150          /*
 151          parameter: 
 152            none
 153          return :
 154            none
 155          */
 156          void mmi_dq_aud_play_with_id(unsigned char aud_id)
 157          {
 158   1      #ifdef __AUD_PLAY_BY_ARR__  
 159   1        if(aud_id<AUD_BASE_ID_MAX)
 160   1          dqiot_drv_audio_play(aud_id);
 161   1      #if 0
                else if(aud_id == AUD_ID_SYSTEM)
C51 COMPILER V9.59.0.0   MMI_AUDIO                                                         02/19/2021 17:34:45 PAGE 4   

                {
                  unsigned char num = 1;
                  dqiot_drv_audio_play(AUD_BASE_ID_SYS_NUM_0 + num);
                  dqiot_drv_audio_play(AUD_BASE_ID_SYS_PASSWORD);
                  num++;
              #if defined(__LOCK_FP_SUPPORT__)||defined(__LOCK_FP_SUPPORT2__)
                  dqiot_drv_audio_play(AUD_BASE_ID_SYS_NUM_0 + num);
                  dqiot_drv_audio_play(AUD_BASE_ID_SYS_FP);
                  num++;
              #elif defined(__LOCK_FP_SUPPORT1_2__)
                  if(mmi_dq_fp_get_type() != FP_NONE)
                  {
                    dqiot_drv_audio_play(AUD_BASE_ID_SYS_NUM_0 + num);
                    dqiot_drv_audio_play(AUD_BASE_ID_SYS_FP);
                    num++;
                  }
              #endif
              #ifdef __LOCK_RFID_CARD_SUPPORT__ 
                  if(mmi_dq_rfid_get_init_state() == 0)
                  {
                    dqiot_drv_audio_play(AUD_BASE_ID_SYS_NUM_0 + num);
                    dqiot_drv_audio_play(AUD_BASE_ID_SYS_RFCARD);
                    num++;
                  }
              #endif
                  dqiot_drv_audio_play(AUD_BASE_ID_SYS_NUM_0 + num);
                  dqiot_drv_audio_play(AUD_BASE_ID_SYS_ADMIN);
                  num++;
                  dqiot_drv_audio_play(AUD_BASE_ID_SYS_NUM_0 + num);
                  dqiot_drv_audio_play(AUD_BASE_ID_SYS_SETTING);
                  num++;
                  dqiot_drv_audio_play(AUD_BASE_ID_SYS_NUM_0 + num);
                  dqiot_drv_audio_play(AUD_BASE_ID_SYS_RESTORE);
                  dqiot_drv_audio_play(AUD_BASE_ID_INPUT_BACK);
                }
              #endif
 199   1        else
 200   1        {
 201   2          unsigned char a = aud_id - AUD_BASE_ID_MAX;
 202   2          while(aud_play_arr[a]!=0)
 203   2          {
 204   3            dqiot_drv_audio_play(aud_play_arr[a]);
 205   3            a++;
 206   3          }
 207   2        }
 208   1      #else
                dqiot_drv_audio_play(aud_id);
              #endif
 211   1        
 212   1        return;
 213   1      }
 214          
 215          
 216          /*
 217          parameter: 
 218            none
 219          return :
 220            none
 221          */
 222          void mmi_dq_aud_play_key_num(unsigned char key_val)
 223          {
 224   1        mmi_dq_aud_stop();
C51 COMPILER V9.59.0.0   MMI_AUDIO                                                         02/19/2021 17:34:45 PAGE 5   

 225   1        //if(mmi_dq_sys_get_pro_sound_state())
 226   1        //  mmi_dq_aud_play_with_id(AUD_ID_PRO_AUDIO,NULL);
 227   1        mmi_dq_aud_play_with_id(AUD_ID_SYS_NUM_0+key_val);
 228   1      
 229   1      }
 230          
 231          /*
 232          parameter: 
 233            none
 234          return :
 235            none
 236          */
 237          void mmi_dq_aud_play_key_tone(void)
 238          {
 239   1        mmi_dq_aud_stop();
 240   1        //if(mmi_dq_sys_get_pro_sound_state())
 241   1          mmi_dq_aud_play_with_id(AUD_ID_PRO_AUDIO);
 242   1      
 243   1      }
 244          /*
 245          parameter: 
 246            none
 247          return :
 248            none
 249          */
 250          void mmi_dq_aud_stop(void)
 251          {
 252   1        dqiot_drv_audio_stop();
 253   1      }
 254          
 255          /*
 256          parameter: 
 257            none
 258          return :
 259            none
 260          */
 261          unsigned char mmi_dq_aud_get_state(void)
 262          {
 263   1        return dqiot_drv_audio_get_state();
 264   1      }
 265          
 266          /*
 267          parameter: 
 268            none
 269          return :
 270            none
 271          */
 272          unsigned char mmi_dq_aud_get_end_flag(void)
 273          {
 274   1        return dqiot_drv_audio_get_end_flag();
 275   1      }
 276          #endif
 277          #endif//__MMI_AUD_C__


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    147    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =    146       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
C51 COMPILER V9.59.0.0   MMI_AUDIO                                                         02/19/2021 17:34:45 PAGE 6   

   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
