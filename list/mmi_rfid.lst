C51 COMPILER V9.59.0.0   MMI_RFID                                                          04/19/2021 17:37:55 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MMI_RFID
OBJECT MODULE PLACED IN .\output\mmi_rfid.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE mmi_src\mmi_rfid.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include;
                    -.\Library\byd_standard_peripheral\include;.\byd_api\byd_key\include;.\byd_api\byd_mifare\include;.\byd_tool_comm;.\byd_r
                    -fid;.\mmi_inc) DEBUG PRINT(.\list\mmi_rfid.lst) TABS(2) OBJECT(.\output\mmi_rfid.obj)

line level    source

   1          #ifndef __MMI_RFID_C__
   2          #define __MMI_RFID_C__
   3          #include "mmi_feature.h"
   4          #ifdef __LOCK_RFID_CARD_SUPPORT__
   5          #include "dqiot_drv.h"
   6          #include "mmi_rfid.h"
   7          #include "string.h"
   8          #include "stdlib.h"
   9          #include "delay.h"
  10          #include "mmi_fs.h"
  11          
  12          unsigned char rfid_uid_buff_temp[RFID_SEC_DATA_LEN] = {0};
  13          unsigned char rfid_uid_buff[2][RFID_SEC_DATA_LEN];
  14          
  15          /*
  16          parameter: 
  17            none
  18          return :
  19            none
  20          */
  21          void mmi_dq_rfid_init(void)
  22          {
  23   1        dqiot_drv_rfid_init();
  24   1      }
  25          
  26          /*
  27          parameter: 
  28            none
  29          return :
  30            none
  31          */
  32          RET_VAL mmi_dq_rfid_check(void)
  33          {
  34   1        return dqiot_drv_rfid_check() ? RET_SUCESS : RET_FAIL;
  35   1      }
  36          
  37          /*
  38          parameter: 
  39            none
  40          return :
  41            none
  42          */
  43          RET_VAL mmi_dq_rfid_work(void)
  44          {
  45   1        return dqiot_drv_rfid_get_card_number(rfid_uid_buff_temp) ? RET_SUCESS : RET_FAIL;
  46   1      }
  47          
  48          /*
  49          parameter: 
  50            none
  51          return :
  52            none
  53          */
C51 COMPILER V9.59.0.0   MMI_RFID                                                          04/19/2021 17:37:55 PAGE 2   

  54          RET_VAL mmi_dq_rfid_gen_char(unsigned char index)
  55          {
  56   1        unsigned char i = 0;
  57   1        if (index >= 2)
  58   1          return RET_FAIL;
  59   1        for (i = 0; i < RFID_SEC_DATA_LEN; i++)
  60   1        {
  61   2          rfid_uid_buff[index][i] = rfid_uid_buff_temp[i];
  62   2          rfid_uid_buff_temp[i] = 0x00;
  63   2        }
  64   1        return RET_SUCESS;
  65   1      }
  66          
  67          /*
  68          parameter: 
  69            none
  70          return :
  71            none
  72          */
  73          RET_VAL mmi_dq_rfid_match(void)
  74          {
  75   1        if (memcmp((const char *)rfid_uid_buff[0], (const char *)rfid_uid_buff[1], RFID_SEC_DATA_LEN) == 0)
  76   1          return RET_SUCESS;
  77   1        return RET_FAIL;
  78   1      }
  79          
  80          /*
  81          parameter: 
  82            none
  83          return :
  84            none
  85          */
  86          RET_VAL mmi_dq_rfid_search_by_temp(unsigned char *index)
  87          {
  88   1        *index = mmi_dq_fs_check_rfid(rfid_uid_buff_temp, FDS_USE_TYPE_ALL);
  89   1        if (*index != 0xFF)
  90   1          return RET_SUCESS;
  91   1      
  92   1        return RET_FAIL;
  93   1      }
  94          
  95          /*
  96          parameter: 
  97            none
  98          return :
  99            none
 100          */
 101          RET_VAL mmi_dq_rfid_search_by_id(unsigned char id, unsigned char *index)
 102          {
 103   1        if (id > 1)
 104   1          return RET_FAIL;
 105   1      
 106   1        *index = mmi_dq_fs_check_rfid(rfid_uid_buff[id], FDS_USE_TYPE_ALL);
 107   1        if (*index != 0xFF)
 108   1          return RET_SUCESS;
 109   1      
 110   1        return RET_FAIL;
 111   1      }
 112          
 113          /*
 114          parameter: 
 115            none
C51 COMPILER V9.59.0.0   MMI_RFID                                                          04/19/2021 17:37:55 PAGE 3   

 116          return :
 117            none
 118          */
 119          RET_VAL mmi_dq_rfid_delete(unsigned char index)
 120          {
 121   1        return mmi_dq_fs_del_rfid(index);
 122   1      }
 123          
 124          /*
 125          parameter: 
 126            none
 127          return :
 128            none
 129          */
 130          RET_VAL mmi_dq_rfid_store(unsigned char id)
 131          {
 132   1        return mmi_dq_fs_set_rfid(rfid_uid_buff[id], FDS_USE_TYPE_USER);
 133   1      }
 134          
 135          #endif
 136          
 137          #endif //__MMI_RFID_C__


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    305    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     40       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
