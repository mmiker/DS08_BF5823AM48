C51 COMPILER V9.59.0.0   MMI_RFID                                                          03/06/2021 11:31:07 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MMI_RFID
OBJECT MODULE PLACED IN .\output\mmi_rfid.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE mmi_src\mmi_rfid.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include;
                    -.\Library\byd_standard_peripheral\include;.\byd_api\byd_key\include;.\byd_api\byd_mifare\include;.\byd_tool_comm;.\byd_r
                    -fid;.\mmi_inc) DEBUG PRINT(.\list\mmi_rfid.lst) TABS(2) OBJECT(.\output\mmi_rfid.obj)

line level    source

   1          #ifndef __MMI_RFID_C__
   2          #define __MMI_RFID_C__
   3          #include "mmi_feature.h"
   4          #ifdef __LOCK_RFID_CARD_SUPPORT__
   5          #include "dqiot_drv.h"
   6          #include "mmi_rfid.h"
   7          #include "string.h"
   8          #include "stdlib.h"
   9          #include "delay.h"
  10          #include "mmi_fs.h"
  11          
  12          unsigned char rfid_uid_buff_temp[RFID_SEC_DATA_LEN];
  13          unsigned char rfid_uid_buff[2][RFID_SEC_DATA_LEN];
  14          unsigned char RF_oldStatus = 0;
  15          
  16          /*
  17          parameter: 
  18            none
  19          return :
  20            none
  21          */
  22          void mmi_dq_rfid_init(void)
  23          {
  24   1        dqiot_drv_rfid_init();
  25   1      }
  26          
  27          /*
  28          parameter: 
  29            none
  30          return :
  31            none
  32          */
  33          RET_VAL mmi_dq_rfid_check(void)
  34          {
  35   1        return dqiot_drv_rfid_check() ? RET_SUCESS : RET_FAIL;
  36   1      }
  37          
  38          /*
  39          parameter: 
  40            none
  41          return :
  42            none
  43          */
  44          RET_VAL mmi_dq_rfid_work(void)
  45          {
  46   1        return dqiot_drv_rfid_get_card_number(rfid_uid_buff_temp) ? RET_SUCESS : RET_FAIL;
  47   1      }
  48          
  49          /*
  50          parameter: 
  51            none
  52          return :
  53            none
C51 COMPILER V9.59.0.0   MMI_RFID                                                          03/06/2021 11:31:07 PAGE 2   

  54          */
  55          RET_VAL mmi_dq_rfid_gen_char(unsigned char index)
  56          {
  57   1        unsigned char i = 0;
  58   1        if (index >= 2)
  59   1          return RET_FAIL;
  60   1        for (i = 0; i < RFID_SEC_DATA_LEN; i++)
  61   1        {
  62   2          rfid_uid_buff[index][i] = rfid_uid_buff_temp[i];
  63   2          rfid_uid_buff_temp[i] = 0x00;
  64   2        }
  65   1        return RET_SUCESS;
  66   1      }
  67          
  68          /*
  69          parameter: 
  70            none
  71          return :
  72            none
  73          */
  74          RET_VAL mmi_dq_rfid_match(void)
  75          {
  76   1        if (memcmp((const char *)rfid_uid_buff[0], (const char *)rfid_uid_buff[1], RFID_SEC_DATA_LEN) == 0)
  77   1          return RET_SUCESS;
  78   1        return RET_FAIL;
  79   1      }
  80          
  81          /*
  82          parameter: 
  83            none
  84          return :
  85            none
  86          */
  87          RET_VAL mmi_dq_rfid_search_by_temp(unsigned char *index)
  88          {
  89   1        *index = mmi_dq_fs_check_rfid(rfid_uid_buff_temp, FDS_USE_TYPE_ALL);
  90   1        if (*index != 0xFF)
  91   1          return RET_SUCESS;
  92   1      
  93   1        return RET_FAIL;
  94   1      }
  95          
  96          /*
  97          parameter: 
  98            none
  99          return :
 100            none
 101          */
 102          RET_VAL mmi_dq_rfid_search_by_id(unsigned char id, unsigned char *index)
 103          {
 104   1        if (id > 1)
 105   1          return RET_FAIL;
 106   1      
 107   1        *index = mmi_dq_fs_check_rfid(rfid_uid_buff[id], FDS_USE_TYPE_ALL);
 108   1        if (*index != 0xFF)
 109   1          return RET_SUCESS;
 110   1      
 111   1        return RET_FAIL;
 112   1      }
 113          
 114          /*
 115          parameter: 
C51 COMPILER V9.59.0.0   MMI_RFID                                                          03/06/2021 11:31:07 PAGE 3   

 116            none
 117          return :
 118            none
 119          */
 120          RET_VAL mmi_dq_rfid_delete(unsigned char index)
 121          {
 122   1        return mmi_dq_fs_del_rfid(index);
 123   1      }
 124          
 125          /*
 126          parameter: 
 127            none
 128          return :
 129            none
 130          */
 131          RET_VAL mmi_dq_rfid_store(unsigned char id)
 132          {
 133   1        return mmi_dq_fs_set_rfid(rfid_uid_buff[id], FDS_USE_TYPE_USER);
 134   1      }
 135          
 136          #endif
 137          
 138          #endif //__MMI_RFID_C__


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    305    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     41       6
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
