C51 COMPILER V9.59.0.0   BYD_INIT                                                          01/15/2021 17:11:11 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE BYD_INIT
OBJECT MODULE PLACED IN .\output\byd_init.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE source\byd_init.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include;.
                    -\Library\byd_standard_peripheral\include;.\byd_api\byd_key\include;.\byd_api\byd_mifare\include;.\byd_tool_comm;.\byd_rf
                    -id;.\mmi_inc) DEBUG PRINT(.\list\byd_init.lst) TABS(2) OBJECT(.\output\byd_init.obj)

line level    source

   1          /*!
   2              \file  byd_init.c
   3              \brief init app
   4          */
   5          
   6          /*
   7              Copyright (C) 2020 BYD
   8          
   9              2020-07-28, V1.0.0, app for byd
  10          */
  11          
  12          #include "byd_init.h"
  13          #include "byd_ctk.h"
  14          #include "byd_iic.h"
  15          #include "byd_adc.h"
  16          #include "bydmcu_libopt.h"
  17          #include "byd_tracemode.h"
  18          
  19          #include "dqiot_drv.h"
  20          
  21          /*!
  22              \brief      wdt config
  23              \param[in]  none
  24              \param[out] none
  25              \retval     none
  26          */
  27          void byd_wdt_init(void)
  28          {
  29   1         wdt_init(WDT_TIME_2304MS);
  30   1      
  31   1      //   INT_WDT_TIMER2_CLR();
  32   1      //   WDT_IPL_SET(LOW);
  33   1      //   WDT_INT_DISABLE();
  34   1         
  35   1      }
  36          /*!
  37              \brief      gpio config
  38              \param[in]  none
  39              \param[out] none
  40              \retval     none
  41          */
  42          void byd_gpio_init(void)
  43          {
  44   1      //请根据实际应用初始化gpio,默认输入
  45   1      
  46   1      //未封装的IO口配置输出为低
  47   1      //GPIOF
  48   1      //  gpio_init(GPIOF,GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3,GPIO_MODE_OUT);
  49   1      //  GPIOF_BIT_RESET(GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3);
  50   1        
  51   1      //GPIOA
  52   1      //    gpio_init(GPIOA,0x0f,GPIO_MODE_OUT);//GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  53   1      //  GPIOA_BIT_RESET(0x0f);
C51 COMPILER V9.59.0.0   BYD_INIT                                                          01/15/2021 17:11:11 PAGE 2   

  54   1      
  55   1      //GPIOB
  56   1      //    gpio_init(GPIOB,GPIO_PIN_ALL,GPIO_MODE_OUT);
  57   1      //  GPIOB_BIT_RESET(GPIO_PIN_ALL);
  58   1      
  59   1      //GPIOC
  60   1      //    gpio_init(GPIOC,GPIO_PIN_ALL,GPIO_MODE_OUT);
  61   1      //  GPIOC_BIT_RESET(GPIO_PIN_ALL);
  62   1      
  63   1      //GPIOE
  64   1      //    gpio_init(GPIOE,GPIO_PIN_ALL,GPIO_MODE_OUT);
  65   1      //  GPIOE_BIT_RESET(GPIO_PIN_ALL);
  66   1      
  67   1      //GPIOF
  68   1      //  gpio_init(GPIOF,GPIO_PIN_ALL,GPIO_MODE_OUT);
  69   1      //  GPIOF_BIT_RESET(GPIO_PIN_ALL);
  70   1      
  71   1      //GPIOG
  72   1      //    gpio_init(GPIOG,0x0f,GPIO_MODE_OUT);//GPIO_PIN_0|GPIO_PIN_1|GPIO_PIN_2|GPIO_PIN_3
  73   1      //  GPIOG_BIT_RESET(0x0f);
  74   1      
  75   1      //GPIOH
  76   1      //    gpio_init(GPIOH,GPIO_PIN_4,GPIO_MODE_OUT);
  77   1      //  GPIOH_BIT_RESET(GPIO_PIN_4);
  78   1        
  79   1      }
  80          
  81          /*!
  82              \brief      timer config example
  83              \param[in]  none
  84              \param[out] none
  85              \retval     none
  86          */
  87          void byd_timer_init(void)
  88          {
  89   1      #if 0  // timer0示例配置1ms
              /*
                 t = (count*12000000/fosc) us 
                 n = 8,13,16计数位数,cout必须小于2的n次方,取决配置TIMER0_MODE_SET
                 fosc = 1,4,8,12M 
              */        
                count = 1000;
                TIMER0_MODE_SET(TIMER_16BIT);//TIMER_13BIT,TIMER_8BIT_AUTORELOAD,TIMER_8BIT 
                TIMER0_CT_MODE_SET(TIME_SELECT);//COUNT_SELECT
                TIMER0_COUNT_16BIT(count);//TIMER_16BIT
              //  TIMER0_COUNT_13BIT(count);//TIMER_13BIT
              //  TIMER0_COUNT_8BIT(count);//TIMER_8BIT_AUTORELOAD,TIMER_8BIT
                timer0_1_init(TIMER0);
              
                INT_TIMER0_CLR();
                TIMER0_IPL_SET(LOW);
                TIMER0_INT_ENABLE();
                TIMER0_ENABLE();
              #endif
 108   1      
 109   1      #if 0  // timer1示例配置5ms
              /*
                 t = (count*12000000/fosc) us 
                 n = 8,13,16计数位数,cout必须小于2的n次方,取决配置TIMER0_MODE_SET
                 fosc = 1,4,8,12M    
              */ 
              
C51 COMPILER V9.59.0.0   BYD_INIT                                                          01/15/2021 17:11:11 PAGE 3   

                  count = 5000;
                TIMER1_MODE_SET(TIMER_16BIT);//TIMER_13BIT,TIMER_8BIT_AUTORELOAD
                TIMER1_CT_MODE_SET(TIME_SELECT);//COUNT_SELECT
                TIMER1_COUNT_16BIT(count);//TIMER_16BIT
              //  TIMER1_COUNT_13BIT(count);//TIMER_13BIT
              //  TIMER1_COUNT_8BIT(count);//TIMER_8BIT_AUTORELOAD
                timer0_1_init(TIMER1);
              
                INT_TIMER1_CLR();//清除中断标志 
                TIMER1_IPL_SET(LOW);//中断优先级为低
                TIMER1_INT_ENABLE();//使能中断  
                TIMER1_ENABLE();
              #endif
 129   1      
 130   1      #if 0 //timer2示例配置,用于休眠唤醒
              /*
                 t = prescale*(1000000/32768)*(count+1) us 
                 prescale = 1,65536   
              */    
              
                count = 391;
                TIMER2_CLOCK_SELECT(TIMER2_CLOCK_RC);//TIMER2_CLOCK_XTAL选择外部晶振要使能XTAL_32K_ENABLE()
                TIMER2_AUTO_RELOAD(DISABLE);//ENABLE
                TIMER2_PRESCALE(TIMER2_PRESCALE_1);//TIMER2_PRESCALE_65536
                TIMER2_COUNT_SET(count);
              
                INT_WDT_TIMER2_CLR();//清除中断标志 
                TIMER2_IPL_SET(LOW); //中断优先级为低
                TIMER2_INT_DISABLE();//关闭中断
              
              #endif
 147   1      
 148   1      #if 0  // //timer3示例配置1ms
              /*
                 t = (clock_divide/24)*(count+1) us 
                 clock_divide = 12,4   
              */
                
                count = 1999;
                TIMER3_CLOCK_DIVIDE(TIMER3_CLOCK_DIVIDE_12);
                TIMER3_AUTO_RELOAD(DISABLE);//ENABLE
                TIMER3_COUNT_SET(count);
              
                INT_TIMER3_SM4_CLR();//清除中断标志 
                TIMER3_IPL_SET(LOW);//中断优先级为低
                TIMER3_INT_ENABLE();//使能中断
                TIMER3_ENABLE();
              #endif
 164   1      }
 165          
 166          /*!
 167              \brief      exti config example
 168              \param[in]  none
 169              \param[out] none
 170              \retval     none
 171          */
 172          void byd_exint_init(void)
 173          {
 174   1        EA = 0;
 175   1      /*外部中断0示例*/
 176   1      #if 0
                  INT0_0_7_TRIGGER_SET(EXTI_TRIG_FALLING);//上升沿或者下降沿或者双沿触发  
C51 COMPILER V9.59.0.0   BYD_INIT                                                          01/15/2021 17:11:11 PAGE 4   

                INT0_0_PH0_CONFIG(ENABLE);//使能IO口的中断功能
                INT0_0_7_FLAG_CLR(INT0_0_PH0_FLAG);//清除中断标志
              
                INT0_1_PH1_CONFIG(ENABLE);//使能IO口的中断功能
                INT0_0_7_FLAG_CLR(INT0_0_PH1_FLAG);//清除中断标志
              
                INT0_8_TRIGGER_SET(EXTI_TRIG_FALLING);//上升沿或者下降沿或者双沿触发  
                INT0_8_PB0_CONFIG(ENABLE);//使能IO口的中断功能
                  INT0_8_FLAG_CLR();//清除中断标志
              
                INT_EXTI_0_CLR();//清除中断源标志
                INT0_IPL_SET(LOW);//中断优先级为低
                INT0_ENABLE();//使能中断源
              #endif
 192   1      
 193   1      
 194   1      /*外部中断1示例*/
 195   1      #if 0
                  INT1_TRIGGER_SET(EXTI_TRIG_FALLING);//上升沿或者下降沿或者双沿触发  
                INT1_PB1_CONFIG(ENABLE);//使能IO口的中断功能
                INT_EXTI_1_CLR();//清除中断源标志
                INT1_IPL_SET(LOW);//中断优先级为低
                INT1_ENABLE();//使能中断源
              #endif
 202   1      
 203   1      /*外部中断2示例*/
 204   1      #if 0
                  INT2_TRIGGER_SET(EXTI_TRIG_FALLING);//上升沿或者下降沿或者双沿触发  
                INT2_PB2_CONFIG(ENABLE);//使能IO口的中断功能
                INT_EXTI_2_CLR();//清除中断源标志
                INT2_IPL_SET(LOW);//中断优先级为低
                INT2_ENABLE();//使能中断源
              #endif
 211   1      
 212   1      /*外部中断3示例*/
 213   1      #if 0
                  INT3_TRIGGER_SET(EXTI_TRIG_FALLING);//上升沿或者下降沿或者双沿触发  
                INT3_PB3_CONFIG(ENABLE);//使能IO口的中断功能
                INT_EXTI_3_CLR();//清除中断源标志
                INT3_IPL_SET(LOW);//中断优先级为低
                INT3_ENABLE();//使能中断源
              #endif
 220   1      
 221   1      /*外部中断4示例*/
 222   1      #if 0
                INT4_TRIGGER_SET(EXTI4_TRIG_FALLING);//上升沿或者下降沿触发,请注意调用宏定义必须为EXTI4_TRIG_FALLING/EXTI
             -4_TRIG_RISING    
                INT4_07_PE4_CONFIG(ENABLE);//使能IO口的中断功能
                INT4_15_PF4_CONFIG(ENABLE);//使能IO口的中断功能
                INT4_19_PG0_CONFIG(ENABLE);//使能IO口的中断功能
                INT_EXTI_4_CLR();//清除中断源标志
                INT4_IPL_SET(LOW);//中断优先级为低
                INT4_ENABLE();//使能中断源
              #endif
 231   1        EA = 1;
 232   1      }
 233          
 234          /*!
 235              \brief      uart0 and uart1 config example
 236              \param[in]  none
 237              \param[out] none
 238              \retval     none
C51 COMPILER V9.59.0.0   BYD_INIT                                                          01/15/2021 17:11:11 PAGE 5   

 239          */
 240          void uart_config(void)
 241          {
 242   1      /*uart0 config PC4/PC5*/
 243   1      #if 0
                
                GPIOC_BIT_SET(GPIO_PIN_4|GPIO_PIN_5);//避免有毛刺
                  
                UART0_PORT_SET(UART0_PC4_PC5);
                UART0_CON2 = 0;
                UART0_STATE = 0;
                  uart_baudrate_config(UART0,UART_BAUDRATE_9600);//波特率
                UART0_STOP_MODE(STOP_WIDTH_1BIT);//停止位
                UART0_DATA_MODE(DATA_MODE_8BIT);//数据位
                UART0_PARITY_SET(DISABLE); //奇偶校验使能
                UART0_PARITY_SEL(ODD_PARITY);//奇偶校验选择
                  UART0_MULTI_MODE(DISABLE);//多处理器通信模式
                
                UART0_RX_ENABLE();//接收使能 
                   
              #if 0    
                UART0_TX_INT_DISABLE();//发送中断关闭
                UART0_RX_INT_DISABLE();//接收中断关闭
              #else
                  UART0_TX_INT_ENABLE();//发送中断使能
                UART0_RX_INT_ENABLE();//接收中断使能
                INT_UART0_CLR();//清除中断源标志
                UART0_IPL_SET(LOW);//中断优先级设置
                UART0_INT_ENABLE();//中断源 
              #endif
                
                UART0_ENABLE();//使能uart0
                
              
              #endif
 274   1      
 275   1      /*uart0 config PE4/PE5*/
 276   1      #if 0
                
                GPIOC_BIT_SET(GPIO_PIN_4|GPIO_PIN_5);//避免有毛刺
                  
                UART0_PORT_SET(UART0_PE4_PE5);
                UART0_CON2 = 0;
                UART0_STATE = 0;
                  uart_baudrate_config(UART0,UART_BAUDRATE_9600);//波特率
                UART0_STOP_MODE(STOP_WIDTH_1BIT);//停止位
                UART0_DATA_MODE(DATA_MODE_8BIT);//数据位
                UART0_PARITY_SET(DISABLE); //奇偶校验使能
                UART0_PARITY_SEL(ODD_PARITY);//奇偶校验选择
                  UART0_MULTI_MODE(DISABLE);//多处理器通信模式
                
                UART0_RX_ENABLE();//接收使能 
                   
              #if 0    
                UART0_TX_INT_DISABLE();//发送中断关闭
                UART0_RX_INT_DISABLE();//接收中断关闭
              #else
                  UART0_TX_INT_ENABLE();//发送中断使能
                UART0_RX_INT_ENABLE();//接收中断使能
                INT_UART0_CLR();//清除中断源标志
                UART0_IPL_SET(LOW);//中断优先级设置
                UART0_INT_ENABLE();//中断源 
C51 COMPILER V9.59.0.0   BYD_INIT                                                          01/15/2021 17:11:11 PAGE 6   

              #endif
                
                UART0_ENABLE();//使能uart0
                
              
              #endif
 307   1      
 308   1      /*uart1 config*/
 309   1      #if 0
                
                GPIOC_BIT_SET(GPIO_PIN_6|GPIO_PIN_7);//避免有毛刺
                    
                UART1_PORT_SET(UART1_PC6_PC7);
                UART1_CON2 = 0;
                UART1_STATE = 0;
                uart_baudrate_config(UART1,UART_BAUDRATE_9600);//波特率
                UART1_STOP_MODE(STOP_WIDTH_1BIT);//停止位
                UART1_DATA_MODE(DATA_MODE_8BIT);//数据位
                UART1_PARITY_SET(DISABLE); //奇偶校验使能
                UART1_PARITY_SEL(ODD_PARITY);//奇偶校验选择
                  UART1_MULTI_MODE(DISABLE);//多处理器通信模式
                
                UART1_RX_ENABLE();//接收使能
                  
              #if 0
                UART1_TX_INT_DISABLE();//发送中断关闭
                UART1_RX_INT_DISABLE();//接收中断关闭
              #else
                  UART1_TX_INT_ENABLE();//发送中断使能
                UART1_RX_INT_ENABLE();//接收中断使能    
                INT_UART1_CLR();//清除中断源标志
                UART1_IPL_SET(LOW);//中断优先级设置
                UART1_INT_ENABLE();//中断源
              #endif
                
                UART1_ENABLE();//使能uart1
                
              #endif
 339   1      }
 340          
 341          /*!
 342              \brief      pwm config example
 343              \param[in]  none
 344              \param[out] none
 345              \retval     none
 346          */
 347          void pwm_config(void)
 348          {
 349   1      /*  
 350   1        pwm_duty = (pwm_cnt_h+pwm_cnt_l)/sys_clk
 351   1        pwm_width = pwm_cnt_h/(pwm_cnt_h+pwm_cnt_l)
 352   1      */
 353   1      //必须先使能才能配置PWM DUTYWIDTH 
 354   1        PWM_CH_ENABLE(PWM0_CH_PB6);
 355   1        PWM_CH_ENABLE(PWM1_CH_PB7);
 356   1        PWM_CH_ENABLE(PWM2_CH_PH7);
 357   1        pwm0_duty_width_config(10000,10000);
 358   1        pwm1_duty_width_config(20000,20000);
 359   1        pwm2_duty_width_config(30000,30000);
 360   1      
 361   1      /*!!!!!!!!!恢复IO口功能要关闭pwm!!!!!!!!!!!*/
 362   1      //  PWM_CH_DISABLE(PWM0_CH_PB6);
C51 COMPILER V9.59.0.0   BYD_INIT                                                          01/15/2021 17:11:11 PAGE 7   

 363   1      //  PWM_CH_DISABLE(PWM1_CH_PB7);
 364   1      //  SET_PB6_IO_OUT;SET_PB6_L;
 365   1      //  SET_PB7_IO_OUT;SET_PB7_L;
 366   1      }
 367          
 368          /*!
 369              \brief      spi config example
 370              \param[in]  none
 371              \param[out] none
 372              \retval     none
 373          */
 374          void spi_config(void)
 375          {
 376   1          SPI_DEVICE_MODE(SPI_MASTER);//SPI_SLAVE
 377   1        SPI_PRESCALE_SET(SYS_CLK_DIVIDE_6);//12M/6=2M
 378   1        SPI_DUPLEX_SET(FULL_DUPLEX);//HALF_DUPLEX
 379   1        SPI_ENDIAN_SET(MSB_FIRST);//LSB_FIRST
 380   1        SPI_CPOL_SET(CPOL_LOW);//CPOL_HIGH
 381   1        SPI_CPHA_SET(SPI_CPHA_1Edge);//SPI_CPHA_2Edge
 382   1        
 383   1        SPI_TX_INT_DISABLE();
 384   1        SPI_RX_INT_DISABLE();
 385   1      
 386   1        INT_SPI1_CLR();
 387   1        SPI_IPL_SET(LOW);
 388   1        SPI_INT_DISABLE();
 389   1      
 390   1        SPI_ENABLE();
 391   1      }
 392            
 393          /*
 394            \brief      byd init
 395              \param[in]  none
 396              \param[out] none
 397              \retval     none
 398          */
 399          void byd_init(void)
 400          {
 401   1        DisableGlobalInterrupt();
 402   1      
 403   1        clock_config(SYS_CLOCK_SEL);
 404   1        
 405   1        BOR_ENABLE();//power off reset
 406   1        PLL_WAKE_TIME_SET(0);//idle mode wake time
 407   1        
 408   1      //  byd_gpio_init();
 409   1        dqiot_drv_gpio_init();
 410   1      
 411   1      #if TRACEMODE_EN  
                byd_tracemode_init(0x54,GPIO_PE4_PE5);//debug init
              #endif
 414   1      
 415   1        EnableGlobalInterrupt();
 416   1            
 417   1      #if BYD_CTK_EN
 418   1        byd_ctk_init();   
 419   1      #endif
 420   1      
 421   1        XTAL_32K_ENABLE();
 422   1        delay_ms(1500);
 423   1      
 424   1      #if MIFARE_EN
C51 COMPILER V9.59.0.0   BYD_INIT                                                          01/15/2021 17:11:11 PAGE 8   

 425   1        rfid_config();
 426   1      #endif
 427   1      
 428   1      //  byd_timer_init();//示例使用timer2唤醒idle模式
 429   1      
 430   1      //  uart_config();
 431   1      //  spi_config();
 432   1      //  pwm_config();
 433   1      //  byd_exint_init();
 434   1      //  lvdt_init(0);
 435   1        dqiot_drv_init();
*** WARNING C206 IN LINE 435 OF source\byd_init.c: 'dqiot_drv_init': missing function-prototype
 436   1      
 437   1          byd_wdt_init(); 
 438   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    156    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
