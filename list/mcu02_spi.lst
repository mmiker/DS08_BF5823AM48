C51 COMPILER V9.59.0.0   MCU02_SPI                                                         04/24/2021 14:28:13 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MCU02_SPI
OBJECT MODULE PLACED IN .\output\mcu02_spi.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE Library\byd_standard_peripheral\source\mcu02_spi.c LARGE OMF2 OPTIMIZE(8
                    -,SPEED) BROWSE INCDIR(.\include;.\Library\byd_standard_peripheral\include;.\byd_api\byd_key\include;.\byd_api\byd_mifare
                    -\include;.\byd_tool_comm;.\byd_rfid;.\mmi_inc) DEBUG PRINT(.\list\mcu02_spi.lst) TABS(2) OBJECT(.\output\mcu02_spi.obj)

line level    source

   1          /*!
   2              \file  mcu02_spi.c
   3              \brief spi driver
   4          */
   5          
   6          /*
   7              Copyright (C) 2020 BYD
   8          
   9              2020-05-10, V1.0.0, firmware for mcu02
  10          */
  11          
  12          #include "mcu02_spi.h"
  13          
  14          /*!
  15              \brief      spi high speed communication
  16              \param[in]  tx_addr: spi transmit data addr 
  17                  rx_addr: spi save receive data addr
  18                  comm_num: spi communication byte number 
  19              \param[out] none
  20              \retval     none
  21          */
  22          void spi_high_speed_comm(uint16_t tx_addr,uint16_t rx_addr,uint16_t comm_num,HIGH_SPEED_MODE_enum high_mod
             -e)
  23          {
  24   1        uint8_t tx_addr_buff = (tx_addr >> 4);
  25   1        uint8_t rx_addr_buff = (rx_addr >> 4);
  26   1        
  27   1          REG_ADDR = SPI1_TX_START_ADDR;
  28   1        REG_DATA = tx_addr_buff;
  29   1      
  30   1        REG_ADDR = SPI1_RX_START_ADDR;
  31   1        REG_DATA = rx_addr_buff;
  32   1      
  33   1        REG_ADDR = SPI1_NUM_L;
  34   1        REG_DATA = (uint8_t)comm_num;
  35   1      
  36   1        REG_ADDR = SPI_NUM_H;
  37   1        REG_DATA = ((comm_num >> 8) & 0x0f);
  38   1      
  39   1        if(FULL_DUPLEX_MODE==high_mode)
  40   1        {
  41   2          SPI1_CFG2 &= ~HALF_DUPLEX;
  42   2        }
  43   1        else if(HALF_DUPLEX_TX==high_mode)
  44   1        {
  45   2          SPI1_CFG2 |= HALF_DUPLEX;
  46   2          SPI1_CFG2 |= SPI_HALF_DUPLEX_TX;
  47   2        }
  48   1        else if(HALF_DUPLEX_RX==high_mode)
  49   1        {
  50   2          SPI1_CFG2 |= HALF_DUPLEX;
  51   2          SPI1_CFG2 &= ~SPI_HALF_DUPLEX_TX;
  52   2        }
C51 COMPILER V9.59.0.0   MCU02_SPI                                                         04/24/2021 14:28:13 PAGE 2   

  53   1        SPI1_CFG1 &= ~SPI_CS_N;
  54   1        SPI1_CFG2 |= SPI_HIGH_SPEED;
  55   1      
  56   1      }
  57          
  58          /*!
  59              \brief      wait spi high speed communication complete
  60              \param[in]  none
  61              \param[out] none
  62              \retval     SUCCESS or ERROR
  63          */
  64          ErrStatus wait_spi_high_comm_end(void)
  65          { 
  66   1        while(SPI1_CFG2 & SPI_HIGH_SPEED);
  67   1        while((SPI1_STATE & SPI_INT_TX_EMPTY) == 0x00);
  68   1        SPI1_CFG1 |= SPI_CS_N;
  69   1        SPI1_CFG2 &= ~HALF_DUPLEX;
  70   1        return SUCCESS;
  71   1      }
  72          
  73          /*!
  74              \brief      spi send and receive a byte
  75              \param[in]  dat: send data
  76              \param[out] none
  77              \retval     receive data
  78          */
  79          uint8_t spi_sendbyte(uint8_t dat)
  80          { 
  81   1        while((SPI1_STATE & SPI_INT_TX_EMPTY) == 0x00);
  82   1        SPI1_SPID = dat;
  83   1        while((SPI1_STATE & SPI_INT_RX_FULL) == 0x00);
  84   1        dat = SPI1_SPID;
  85   1        SPI1_STATE &= ~SPI_INT_RX_FULL;
  86   1        return dat;
  87   1      }
  88          
  89          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    135    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
