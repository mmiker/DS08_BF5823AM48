C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/06/2021 11:30:35 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE DQIOT_DRV_WIFI
OBJECT MODULE PLACED IN .\output\dqiot_drv_wifi.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE source\dqiot_drv_wifi.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\inc
                    -lude;.\Library\byd_standard_peripheral\include;.\byd_api\byd_key\include;.\byd_api\byd_mifare\include;.\byd_tool_comm;.\
                    -byd_rfid;.\mmi_inc) DEBUG PRINT(.\list\dqiot_drv_wifi.lst) TABS(2) OBJECT(.\output\dqiot_drv_wifi.obj)

line level    source

   1          #ifndef __DQIOT_DRV_WIFI_H__
   2          #define __DQIOT_DRV_WIFI_H__
   3          #include "dqiot_drv_wifi.h"
   4          #include "mmi_feature.h"
   5          #include "iic_master.h"
   6          #include "delay.h"
   7          
   8          /*
   9          parameter: 
  10            none
  11          return :
  12            none
  13          */
  14          uint8_t UH010_ReadDatas(uint8_t *send,uint8_t send_len,uint8_t *Buf,uint8_t len) 
  15          {
  16   1        uint8_t i;
  17   1        
  18   1        if(send_len>0)
  19   1        {
  20   2          EA = 0;
  21   2          iic_master_start();
  22   2            
  23   2          if (iic_sendbyte_and_getnack(WIFI_ADDR)) {   
  24   3            //iic_master_stop();
  25   3            //EA = 1;
  26   3            //return 1;
  27   3          }
  28   2          
  29   2          for (i = 0; i < send_len; i++) {
  30   3            if (iic_sendbyte_and_getnack(send[i])) {
  31   4              //iic_master_stop();
  32   4              //EA = 1;
  33   4              //return 1;
  34   4            }
  35   3          } 
  36   2      
  37   2          if (iic_sendbyte_and_getnack(WIFI_ADDR | 0x01)) {
  38   3            //iic_master_stop();
  39   3            //EA = 1; 
  40   3            //return 1;
  41   3          } 
  42   2          
  43   2          for (i = 0; i < len; i++) {
  44   3            Buf[i] = iic_receive_byte();
  45   3            if (i == (len - 1))
  46   3              break;
  47   3            iic_respond(ACK);
  48   3          }
  49   2          
  50   2          iic_respond(NACK);
  51   2          
  52   2          EA = 1;
  53   2          iic_master_stop();       
C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/06/2021 11:30:35 PAGE 2   

  54   2      
  55   2        }
  56   1        else
  57   1        {   
  58   2            EA = 0;
  59   2            iic_master_start();        
  60   2            if (iic_sendbyte_and_getnack(WIFI_ADDR | 0x01)) {
  61   3              //iic_master_stop();
  62   3              //EA = 1; 
  63   3              //return 1;
  64   3            }   
  65   2            
  66   2            for (i = 0; i < len; i++) {
  67   3              Buf[i] = iic_receive_byte();
  68   3              if (i == (len - 1))
  69   3                break;
  70   3              iic_respond(ACK);
  71   3            }
  72   2            
  73   2            iic_respond(NACK);
  74   2            
  75   2            EA = 1;
  76   2            iic_master_stop();       
  77   2      
  78   2        }
  79   1      
  80   1        return 0;
  81   1      }
  82          
  83          /*
  84          parameter: 
  85            none
  86          return :
  87            none
  88          */
  89          unsigned char UH010_Write_Byte(uint8_t *send,uint8_t send_len)
  90          {
  91   1          uint8_t i;    
  92   1      
  93   1        EA = 0;
  94   1          iic_master_start();
  95   1              
  96   1          if (iic_sendbyte_and_getnack(WIFI_ADDR & ~0x01)) {   
  97   2              iic_master_stop();
  98   2          EA = 1;
  99   2              return 1;
 100   2          }
 101   1      
 102   1          for (i = 0; i < send_len; i++) {
 103   2              if (iic_sendbyte_and_getnack(send[i])) {
 104   3                  iic_master_stop();
 105   3            EA = 1;
 106   3                  return 1;
 107   3              }
 108   2          }   
 109   1          EA = 1;                        
 110   1          iic_master_stop();
 111   1      
 112   1        return 0;
 113   1      }
 114          
 115          
C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/06/2021 11:30:35 PAGE 3   

 116          /*
 117          parameter: 
 118            none
 119          return :
 120            none
 121          */
 122          void wifi_uh316_init(void)
 123          {
 124   1      
 125   1      
 126   1      }
 127          
 128          
 129          /*
 130          parameter: 
 131            none
 132          return :
 133            none
 134          */
 135          uint8_t wifi_net_connect_send(void)
 136          {
 137   1        uint8_t wifi_data[2];
 138   1        wifi_data[0] = WIFI_CMD_NET_CON;
 139   1        wifi_data[1] = 100;
 140   1        if(UH010_Write_Byte(wifi_data,2) == 0)
 141   1          return 1;
 142   1        else
 143   1          return 0;
 144   1      }
 145          
 146          /*
 147          parameter: 
 148            none
 149          return :
 150            none
 151          */
 152          uint8_t wifi_net_connect_state(void)
 153          {
 154   1        uint8_t wifi_data[2];
 155   1        uint8_t data_2[2] = {0};
 156   1        wifi_data[0] = WIFI_CMD_NET_STATE;
 157   1        wifi_data[1] = 100;
 158   1        UH010_Write_Byte(wifi_data,2);
 159   1        delay_ms(10);
 160   1        UH010_ReadDatas(wifi_data,0,data_2,2);
 161   1        if(data_2[0]=='I'&&data_2[1]=='O')
 162   1          return 1;
 163   1        else
 164   1          return 0;
 165   1        
 166   1      }
 167          
 168          /*
 169          parameter: 
 170            none
 171          return :
 172            none
 173          */
 174          uint8_t wifi_open_ask(void)
 175          {
 176   1        uint8_t wifi_data[2];
 177   1        wifi_data[0] = WIFI_CMD_WF_OPEN_ASK;
C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/06/2021 11:30:35 PAGE 4   

 178   1        wifi_data[1] = 100;
 179   1        if(UH010_Write_Byte(wifi_data,2) == 0)
 180   1          return 1;
 181   1        else
 182   1          return 0;
 183   1      }
 184          
 185          /*
 186          parameter: 
 187            none
 188          return :
 189            none
 190          */
 191          uint8_t wifi_open_reply_get(void)
 192          {
 193   1        uint8_t wifi_data[2];
 194   1        uint8_t data_2[2] = {0};
 195   1        wifi_data[0] = WIFI_CMD_WF_OPEN_REPLY;
 196   1        wifi_data[1] = 100;
 197   1        UH010_Write_Byte(wifi_data,2);
 198   1        delay_ms(10);
 199   1        UH010_ReadDatas(wifi_data,0,data_2,2);
 200   1        if(data_2[0]=='K'&&data_2[1]=='O')
 201   1          return 1;
 202   1        else if(data_2[0]=='K'&&data_2[1]=='E')
 203   1          return 2;
 204   1        else if(data_2[0]=='K'&&data_2[1]=='K')
 205   1          return 3;
 206   1        else
 207   1          return 0;
 208   1      
 209   1      
 210   1      }
 211          
 212          /*
 213          parameter: 
 214            none
 215          return :
 216            none
 217          */
 218          void wifi_wake_up(void)
 219          {
 220   1      
 221   1        uint8_t wifi_data[2];
 222   1        wifi_data[0] = WIFI_CMD_WAKEUP;
 223   1        wifi_data[1] = 100;
 224   1        UH010_Write_Byte(wifi_data,2);
 225   1      }
 226          
 227          /*
 228          parameter: 
 229            none
 230          return :
 231            none
 232          */
 233          void wifi_sleep_mode(void)
 234          {
 235   1        uint8_t wifi_data[2];
 236   1        wifi_data[0] = WIFI_CMD_SLEEP;
 237   1        wifi_data[1] = 100;
 238   1        UH010_Write_Byte(wifi_data,2);
 239   1      }
C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/06/2021 11:30:35 PAGE 5   

 240          
 241          /*
 242          parameter: 
 243            none
 244          return :
 245            none
 246          */
 247          void wifi_add_password(void)
 248          {
 249   1        uint8_t wifi_data[2];
 250   1        wifi_data[0] = WIFI_CMD_ADD_PW;
 251   1        wifi_data[1] = 100;
 252   1        UH010_Write_Byte(wifi_data,2);
 253   1      }
 254          
 255          /*
 256          parameter: 
 257            none
 258          return :
 259            none
 260          */
 261          void wifi_del_password(void)
 262          {
 263   1        uint8_t wifi_data[2];
 264   1        wifi_data[0] = WIFI_CMD_DEL_PW;
 265   1        wifi_data[1] = 100;
 266   1        UH010_Write_Byte(wifi_data,2);
 267   1      }
 268          
 269          /*
 270          parameter: 
 271            none
 272          return :
 273            none
 274          */
 275          void wifi_add_fp(void)
 276          {
 277   1        uint8_t wifi_data[2];
 278   1        wifi_data[0] = WIFI_CMD_ADD_FP;
 279   1        wifi_data[1] = 100;
 280   1        UH010_Write_Byte(wifi_data,2);
 281   1      }
 282          
 283          /*
 284          parameter: 
 285            none
 286          return :
 287            none
 288          */
 289          void wifi_del_fp(void)
 290          {
 291   1        uint8_t wifi_data[2];
 292   1        wifi_data[0] = WIFI_CMD_DEL_FP;
 293   1        wifi_data[1] = 100;
 294   1        UH010_Write_Byte(wifi_data,2);
 295   1      }
 296          
 297          /*
 298          parameter: 
 299            none
 300          return :
 301            none
C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/06/2021 11:30:35 PAGE 6   

 302          */
 303          void wifi_open_by_wifi(void)
 304          {
 305   1        uint8_t wifi_data[2];
 306   1        wifi_data[0] = WIFI_CMD_WF_OPEN;
 307   1        wifi_data[1] = 100;
 308   1        UH010_Write_Byte(wifi_data,2);
 309   1      }
 310          
 311          
 312          /*
 313          parameter: 
 314            none
 315          return :
 316            none
 317          */
 318          void wifi_open_by_password(void)
 319          {
 320   1        uint8_t wifi_data[2];
 321   1        wifi_data[0] = WIFI_CMD_PW_OPEN;
 322   1        wifi_data[1] = 100;
 323   1        UH010_Write_Byte(wifi_data,2);
 324   1      }
 325          
 326          /*
 327          parameter: 
 328            none
 329          return :
 330            none
 331          */
 332          void wifi_open_by_rfid(void)
 333          {
 334   1        uint8_t wifi_data[2];
 335   1        wifi_data[0] = WIFI_CMD_RF_OPEN;
 336   1        wifi_data[1] = 100;
 337   1        UH010_Write_Byte(wifi_data,2);
 338   1      }
 339          
 340          
 341          /*
 342          parameter: 
 343            none
 344          return :
 345            none
 346          */
 347          void wifi_open_by_fp(void)
 348          {
 349   1        uint8_t wifi_data[2];
 350   1        wifi_data[0] = WIFI_CMD_FP_OPEN;
 351   1        wifi_data[1] = 100;
 352   1        UH010_Write_Byte(wifi_data,2);
 353   1      }
 354          
 355          /*
 356          parameter: 
 357            none
 358          return :
 359            none
 360          */
 361          void wifi_open_by_key(void)
 362          {
 363   1        uint8_t wifi_data[2];
C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/06/2021 11:30:35 PAGE 7   

 364   1        wifi_data[0] = WIFI_CMD_KEY_OPEN;
 365   1        wifi_data[1] = 100;
 366   1        UH010_Write_Byte(wifi_data,2);
 367   1      }
 368          
 369          /*
 370          parameter: 
 371            none
 372          return :
 373            none
 374          */
 375          void wifi_door_close(void)
 376          {
 377   1        uint8_t wifi_data[2];
 378   1        wifi_data[0] = WIFI_CMD_CLOSE;
 379   1        wifi_data[1] = 100;
 380   1        UH010_Write_Byte(wifi_data,2);
 381   1      }
 382          
 383          /*
 384          parameter: 
 385            none
 386          return :
 387            none
 388          */
 389          void wifi_via_alarm(void)
 390          {
 391   1        uint8_t wifi_data[2];
 392   1        wifi_data[0] = WIFI_CMD_VIA_ALARM;
 393   1        wifi_data[1] = 100;
 394   1        UH010_Write_Byte(wifi_data,2);
 395   1      }
 396          
 397          /*
 398          parameter: 
 399            none
 400          return :
 401            none
 402          */
 403          void wifi_pw_alarm(void)
 404          {
 405   1        uint8_t wifi_data[2];
 406   1        wifi_data[0] = WIFI_CMD_PW_ALARM;
 407   1        wifi_data[1] = 100;
 408   1        UH010_Write_Byte(wifi_data,2);
 409   1      }
 410          
 411          /*
 412          parameter: 
 413            none
 414          return :
 415            none
 416          */
 417          void wifi_fp_alarm(void)
 418          {
 419   1        uint8_t wifi_data[2];
 420   1        wifi_data[0] = WIFI_CMD_FP_ALARM;
 421   1        wifi_data[1] = 100;
 422   1        UH010_Write_Byte(wifi_data,2);
 423   1      }
 424          
 425          /*
C51 COMPILER V9.59.0.0   DQIOT_DRV_WIFI                                                    03/06/2021 11:30:35 PAGE 8   

 426          parameter: 
 427            none
 428          return :
 429            none
 430          */
 431          void wifi_rf_alarm(void)
 432          {
 433   1        uint8_t wifi_data[2];
 434   1        wifi_data[0] = WIFI_CMD_RF_ALARM;
 435   1        wifi_data[1] = 100;
 436   1        UH010_Write_Byte(wifi_data,2);
 437   1      }
 438          
 439          
 440          /*
 441          parameter: 
 442            none
 443          return :
 444            none
 445          */
 446          void wifi_lowpower_alarm(void)
 447          {
 448   1        uint8_t wifi_data[2];
 449   1        wifi_data[0] = WIFI_CMD_LOWPOWER_ALARM;
 450   1        wifi_data[1] = 100;
 451   1        UH010_Write_Byte(wifi_data,2);
 452   1      }
 453          
 454          #endif
 455          
 456          
 457          
 458          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    969    ----
   CONSTANT SIZE    =      4    ----
   XDATA SIZE       =      4      60
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
