<<<<<<< HEAD
C51 COMPILER V9.59.0.0   MMI_FPS                                                           02/24/2021 17:19:47 PAGE 1   
=======
C51 COMPILER V9.59.0.0   MMI_FPS                                                           02/25/2021 17:43:01 PAGE 1   
>>>>>>> six commit


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MMI_FPS
OBJECT MODULE PLACED IN .\output\mmi_fps.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE mmi_src\mmi_fps.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include;.
                    -\Library\byd_standard_peripheral\include;.\byd_api\byd_key\include;.\byd_api\byd_mifare\include;.\byd_tool_comm;.\byd_rf
                    -id;.\mmi_inc) DEBUG PRINT(.\list\mmi_fps.lst) TABS(2) OBJECT(.\output\mmi_fps.obj)

line level    source

   1          #ifndef __MMI_FPC_C__
   2          #define __MMI_FPC_C__
   3          
<<<<<<< HEAD
   4          #include "string.h"
   5          #include "mmi_fps.h"
   6          #include "mmi_feature.h"
   7          #include "dqiot_drv.h"
   8          #include "delay.h"
   9          
  10          #ifdef __LOCK_FP_SUPPORT__
  11          unsigned char FP_oldStatus = 0;
  12          unsigned short waittime = 0;
=======
   4          #include "mmi_feature.h"
   5          #ifdef __LOCK_FP_SUPPORT__
   6          #include "string.h"
   7          #include "mmi_fps.h"
   8          #include "dqiot_drv.h"
   9          #include "delay.h"
  10          
  11          unsigned char FP_oldStatus = 0;
  12          u16 waittime = 0;
>>>>>>> six commit
  13          /*
  14          parameter: 
  15            current status machine
  16          return :
  17            none
  18          */
  19          //void mmi_dq_fp_set_fp_uart_handle_cb(fp_uart_handle_callback cb)
  20          //{
  21          
  22          //}
  23          
  24          /*
  25          parameter: 
  26            current status machine
  27          return :
  28            none
  29          */
  30          //void mmi_dq_fps_set_irq_handle_cb(fp_irq_handle_callback cb)
  31          //{
  32          //  cb = NULL;
  33          //}
  34          
  35          /*
  36          parameter: 
  37            current status machine
  38          return :
  39            none
  40          */
  41          void mmi_dq_fp_init(void)
  42          {
  43   1        dqiot_drv_uart0B_init();
<<<<<<< HEAD
  44   1        delay_ms(300);
  45   1        dqiot_drv_fp_poweron();
  46   1      
  47   1      #if 1
  48   1        waittime = 3;
  49   1        while (--waittime)
  50   1        {
  51   2          if (PS_HandShake(&AS608_Addr) == 0x55) /* 与AS608模块握手 */
  52   2          {
  53   3            FP_Light(FP_BLUE); //点灯
C51 COMPILER V9.59.0.0   MMI_FPS                                                           02/24/2021 17:19:47 PAGE 2   

  54   3            return;
  55   3          }
  56   2        }
  57   1      #else
                waittime = 3000;
                while (--waittime)
                {
                  if (uart_rx_byte(UART0) == 0x55)
                  {
                    FP_Light(FP_BLUE); //点灯
                    return;
                  }
                }
              #endif
  68   1      
  69   1        return;
  70   1      }
  71          
  72          /*
  73          parameter: 
  74            current status machine
  75          return :
  76            none
  77          */
  78          unsigned char mmi_dq_fp_get_fp_mode(void)
  79          {
  80   1        return 1;
  81   1      }
  82          
  83          /*
  84          parameter: 
  85            current status machine
  86          return :
  87            none
  88          */
  89          unsigned char mmi_dq_fp_get_image(void)
  90          {
  91   1        unsigned char retval = 0;
  92   1      
  93   1        retval = PS_GetImage();
  94   1        return retval;
  95   1      }
  96          
  97          /*
  98          parameter: 
  99            current status machine
 100          return :
 101            none
 102          */
 103          unsigned char mmi_dq_fp_gen_char(unsigned char id)
 104          {
 105   1        unsigned char retval = 0;
 106   1        unsigned char real_buf_id;
 107   1      
 108   1        if (id == 0)
 109   1          real_buf_id = CHAR_BUFFER1;
 110   1        else if (id == 1)
 111   1          real_buf_id = CHAR_BUFFER2;
 112   1        else if (id == 2)
 113   1          real_buf_id = CHAR_BUFFER3;
 114   1        else if (id == 3)
 115   1          real_buf_id = CHAR_BUFFER4;
C51 COMPILER V9.59.0.0   MMI_FPS                                                           02/24/2021 17:19:47 PAGE 3   

 116   1      
 117   1        retval = PS_GenChar(real_buf_id); //生成特征
 118   1        return retval;
 119   1      }
 120          
 121          /*
 122          parameter: 
 123            current status machine
 124          return :
 125            none
 126          */
 127          unsigned char mmi_dq_fp_match(void)
 128          {
 129   1        unsigned char retval = 0;
 130   1      
 131   1        retval = PS_Match();
 132   1        return retval;
 133   1      }
 134          
 135          /*
 136          parameter: 
 137            current status machine
 138          return :
 139            none
 140          */
 141          unsigned char mmi_dq_fp_reg_module(void)
 142          {
 143   1        unsigned char retval = 0;
 144   1      
 145   1        retval = PS_RegModel();
 146   1        return retval;
 147   1      }
 148          
 149          /*
 150          parameter: 
 151            current status machine
 152          return :
 153            none
 154          */
 155          unsigned char mmi_dq_fp_store_char(unsigned char id, unsigned short index)
 156          {
 157   1        unsigned char retval = 0;
 158   1        unsigned char real_buf_id;
 159   1      
 160   1        if (id == 0)
 161   1          real_buf_id = CHAR_BUFFER1;
 162   1        else if (id == 1)
 163   1          real_buf_id = CHAR_BUFFER2;
 164   1        else if (id == 2)
 165   1          real_buf_id = CHAR_BUFFER3;
 166   1        else if (id == 3)
 167   1          real_buf_id = CHAR_BUFFER4;
 168   1      
 169   1        retval = PS_StoreChar(real_buf_id, index); //储存模板
 170   1        return retval;
 171   1      }
 172          
 173          /*
 174          parameter: 
 175            current status machine
 176          return :
 177            none
C51 COMPILER V9.59.0.0   MMI_FPS                                                           02/24/2021 17:19:47 PAGE 4   

 178          */
 179          unsigned char mmi_dq_fp_delete(unsigned short index)
 180          {
 181   1        unsigned char retval = 0;
 182   1      
 183   1        retval = PS_DeletChar(index, 1);
 184   1        return retval;
 185   1      }
 186          
 187          /*
 188          parameter: 
 189            current status machine
 190          return :
 191            none
 192          */
 193          unsigned char mmi_dq_fp_empty(void)
 194          {
 195   1        unsigned char retval = 0;
 196   1      
 197   1        retval = PS_Empty();
 198   1        return retval;
 199   1      }
 200          
 201          /*
 202          parameter: 
 203            current status machine
 204          return :
 205            none
 206          */
 207          unsigned char mmi_dq_fp_get_valid_templete(unsigned short *count)
 208          {
 209   1        unsigned char retval = 0;
 210   1      
 211   1        retval = PS_ValidTempleteNum(count);
 212   1        return retval;
 213   1      }
 214          
 215          /*
 216          parameter: 
 217            current status machine
 218          return :
 219            none
 220          */
 221          unsigned char mmi_dq_fp_high_speed_search(unsigned char Buf_id, unsigned short *index)
 222          {
 223   1        unsigned char retval = 0;
 224   1        unsigned char real_buf_id;
 225   1      
 226   1        if (Buf_id == 0)
 227   1          real_buf_id = CHAR_BUFFER1;
 228   1        else if (Buf_id == 1)
 229   1          real_buf_id = CHAR_BUFFER2;
 230   1        else if (Buf_id == 2)
 231   1          real_buf_id = CHAR_BUFFER3;
 232   1        else if (Buf_id == 3)
 233   1          real_buf_id = CHAR_BUFFER4;
 234   1        retval = PS_HighSpeedSearch(real_buf_id, 0, 300, index);
 235   1        return retval;
 236   1      }
 237          
 238          /*
 239          parameter: 
C51 COMPILER V9.59.0.0   MMI_FPS                                                           02/24/2021 17:19:47 PAGE 5   

 240            current status machine
 241          return :
 242            none
 243          */
 244          unsigned char mmi_dq_fp_search(unsigned char Buf_id, unsigned short *index)
 245          {
 246   1        unsigned char retval = 0;
 247   1        unsigned char real_buf_id;
 248   1      
 249   1        if (Buf_id == 0)
 250   1          real_buf_id = CHAR_BUFFER1;
 251   1        else if (Buf_id == 1)
 252   1          real_buf_id = CHAR_BUFFER2;
 253   1        else if (Buf_id == 2)
 254   1          real_buf_id = CHAR_BUFFER3;
 255   1        else if (Buf_id == 3)
 256   1          real_buf_id = CHAR_BUFFER4;
 257   1      
 258   1        retval = PS_Search(real_buf_id, 0, 300, index);
 259   1        return retval;
 260   1      }
 261          
 262          /*
 263          parameter: 
 264            current status machine
 265          return :
 266            none
 267          */
 268          void mmi_dq_fp_light(FP_COLOR_E light_id)
 269          {
 270   1        FP_Light(light_id); //点灯
 271   1      }
 272          
 273          /*
 274          parameter: 
 275            current status machine
 276          return :
 277            none
 278          */
 279          FP_COLOR_E mmi_dq_fp_get_light(void)
 280          {
 281   1        FP_COLOR_E retval = 0;
 282   1        retval = FP_Get_Light();
 283   1        return retval;
 284   1      }
 285          
 286          /* 触摸判断 */
 287          unsigned char mmi_dq_fp_work(void)
 288          {
 289   1        if (gpio_bit_get(GPIOF, GPIO_PIN_6) == 0)
 290   1        {
 291   2          if (FP_oldStatus == 0)
 292   2          {
 293   3            FP_oldStatus = 1;
 294   3            return 1;
 295   3          }
 296   2        }
 297   1        else
 298   1          FP_oldStatus = 0;
 299   1        return 0;
 300   1      }
 301          
C51 COMPILER V9.59.0.0   MMI_FPS                                                           02/24/2021 17:19:47 PAGE 6   

 302          unsigned char mmi_dq_fp_get_pin(void)
 303          {
 304   1        return gpio_bit_get(GPIOF, GPIO_PIN_6);
 305   1      }
 306          
 307          #endif //__LOCK_FP_SUPPORT__
 308          
 309          #endif //__MMI_FPC_C__


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    474    ----
=======
  44   1        dqiot_drv_fp_poweron();
  45   1      
  46   1        waittime = 2000;
  47   1        while (--waittime)
  48   1        {
  49   2          delay_ms(1);
  50   2          if (FP_Get_Start_Flag() == 1)
  51   2          {
  52   3            FP_Light(FP_BLUE);
  53   3            return;
C51 COMPILER V9.59.0.0   MMI_FPS                                                           02/25/2021 17:43:01 PAGE 2   

  54   3          }
  55   2        }
  56   1      
  57   1        return;
  58   1      }
  59          
  60          /*
  61          parameter: 
  62            current status machine
  63          return :
  64            none
  65          */
  66          unsigned char mmi_dq_fp_get_fp_mode(void)
  67          {
  68   1        return 1;
  69   1      }
  70          
  71          /*
  72          parameter: 
  73            current status machine
  74          return :
  75            none
  76          */
  77          unsigned char mmi_dq_fp_get_image(void)
  78          {
  79   1        unsigned char retval = 0;
  80   1      
  81   1        retval = PS_GetImage();
  82   1        return retval;
  83   1      }
  84          
  85          /*
  86          parameter: 
  87            current status machine
  88          return :
  89            none
  90          */
  91          unsigned char mmi_dq_fp_gen_char(unsigned char id)
  92          {
  93   1        unsigned char retval = 0;
  94   1        unsigned char real_buf_id;
  95   1      
  96   1        if (id == 0)
  97   1          real_buf_id = CHAR_BUFFER1;
  98   1        else if (id == 1)
  99   1          real_buf_id = CHAR_BUFFER2;
 100   1        else if (id == 2)
 101   1          real_buf_id = CHAR_BUFFER3;
 102   1        else if (id == 3)
 103   1          real_buf_id = CHAR_BUFFER4;
 104   1      
 105   1        retval = PS_GenChar(real_buf_id); //生成特征
 106   1        return retval;
 107   1      }
 108          
 109          /*
 110          parameter: 
 111            current status machine
 112          return :
 113            none
 114          */
 115          unsigned char mmi_dq_fp_match(void)
C51 COMPILER V9.59.0.0   MMI_FPS                                                           02/25/2021 17:43:01 PAGE 3   

 116          {
 117   1        unsigned char retval = 0;
 118   1      
 119   1        retval = PS_Match();
 120   1        return retval;
 121   1      }
 122          
 123          /*
 124          parameter: 
 125            current status machine
 126          return :
 127            none
 128          */
 129          unsigned char mmi_dq_fp_reg_module(void)
 130          {
 131   1        unsigned char retval = 0;
 132   1      
 133   1        retval = PS_RegModel();
 134   1        return retval;
 135   1      }
 136          
 137          /*
 138          parameter: 
 139            current status machine
 140          return :
 141            none
 142          */
 143          unsigned char mmi_dq_fp_store_char(unsigned char id, unsigned short index)
 144          {
 145   1        unsigned char retval = 0;
 146   1        unsigned char real_buf_id;
 147   1      
 148   1        if (id == 0)
 149   1          real_buf_id = CHAR_BUFFER1;
 150   1        else if (id == 1)
 151   1          real_buf_id = CHAR_BUFFER2;
 152   1        else if (id == 2)
 153   1          real_buf_id = CHAR_BUFFER3;
 154   1        else if (id == 3)
 155   1          real_buf_id = CHAR_BUFFER4;
 156   1      
 157   1        retval = PS_StoreChar(real_buf_id, index); //储存模板
 158   1        return retval;
 159   1      }
 160          
 161          /*
 162          parameter: 
 163            current status machine
 164          return :
 165            none
 166          */
 167          unsigned char mmi_dq_fp_delete(unsigned short index)
 168          {
 169   1        unsigned char retval = 0;
 170   1      
 171   1        retval = PS_DeletChar(index, 1);
 172   1        return retval;
 173   1      }
 174          
 175          /*
 176          parameter: 
 177            current status machine
C51 COMPILER V9.59.0.0   MMI_FPS                                                           02/25/2021 17:43:01 PAGE 4   

 178          return :
 179            none
 180          */
 181          unsigned char mmi_dq_fp_empty(void)
 182          {
 183   1        unsigned char retval = 0;
 184   1      
 185   1        retval = PS_Empty();
 186   1        return retval;
 187   1      }
 188          
 189          /*
 190          parameter: 
 191            current status machine
 192          return :
 193            none
 194          */
 195          unsigned char mmi_dq_fp_get_valid_templete(unsigned short *count)
 196          {
 197   1        unsigned char retval = 0;
 198   1      
 199   1        retval = PS_ValidTempleteNum(count);
 200   1        return retval;
 201   1      }
 202          
 203          /*
 204          parameter: 
 205            current status machine
 206          return :
 207            none
 208          */
 209          unsigned char mmi_dq_fp_high_speed_search(unsigned char Buf_id, unsigned short *index)
 210          {
 211   1        unsigned char retval = 0;
 212   1        unsigned char real_buf_id;
 213   1      
 214   1        if (Buf_id == 0)
 215   1          real_buf_id = CHAR_BUFFER1;
 216   1        else if (Buf_id == 1)
 217   1          real_buf_id = CHAR_BUFFER2;
 218   1        else if (Buf_id == 2)
 219   1          real_buf_id = CHAR_BUFFER3;
 220   1        else if (Buf_id == 3)
 221   1          real_buf_id = CHAR_BUFFER4;
 222   1        retval = PS_HighSpeedSearch(real_buf_id, 0, 300, index);
 223   1        return retval;
 224   1      }
 225          
 226          /*
 227          parameter: 
 228            current status machine
 229          return :
 230            none
 231          */
 232          unsigned char mmi_dq_fp_search(unsigned char Buf_id, unsigned short *index)
 233          {
 234   1        unsigned char retval = 0;
 235   1        unsigned char real_buf_id;
 236   1      
 237   1        if (Buf_id == 0)
 238   1          real_buf_id = CHAR_BUFFER1;
 239   1        else if (Buf_id == 1)
C51 COMPILER V9.59.0.0   MMI_FPS                                                           02/25/2021 17:43:01 PAGE 5   

 240   1          real_buf_id = CHAR_BUFFER2;
 241   1        else if (Buf_id == 2)
 242   1          real_buf_id = CHAR_BUFFER3;
 243   1        else if (Buf_id == 3)
 244   1          real_buf_id = CHAR_BUFFER4;
 245   1      
 246   1        retval = PS_Search(real_buf_id, 0, 300, index);
 247   1        return retval;
 248   1      }
 249          
 250          /*
 251          parameter: 
 252            current status machine
 253          return :
 254            none
 255          */
 256          void mmi_dq_fp_light(FP_COLOR_E light_id)
 257          {
 258   1        FP_Light(light_id); //点灯
 259   1      }
 260          
 261          /*
 262          parameter: 
 263            current status machine
 264          return :
 265            none
 266          */
 267          FP_COLOR_E mmi_dq_fp_get_light(void)
 268          {
 269   1        FP_COLOR_E retval = 0;
 270   1        retval = FP_Get_Light();
 271   1        return retval;
 272   1      }
 273          
 274          /* 触摸判断 */
 275          unsigned char mmi_dq_fp_work(void)
 276          {
 277   1        if (gpio_bit_get(GPIOF, GPIO_PIN_6) == 0)
 278   1        {
 279   2          if (FP_oldStatus == 0)
 280   2          {
 281   3            FP_oldStatus = 1;
 282   3            return 1;
 283   3          }
 284   2        }
 285   1        else
 286   1          FP_oldStatus = 0;
 287   1        return 0;
 288   1      }
 289          
 290          unsigned char mmi_dq_fp_get_pin(void)
 291          {
 292   1        return gpio_bit_get(GPIOF, GPIO_PIN_6);
 293   1      }
 294          
 295          #endif //__LOCK_FP_SUPPORT__
 296          
 297          #endif //__MMI_FPC_C__


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    469    ----
C51 COMPILER V9.59.0.0   MMI_FPS                                                           02/25/2021 17:43:01 PAGE 6   

>>>>>>> six commit
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      7      12
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
