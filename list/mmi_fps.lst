C51 COMPILER V9.59.0.0   MMI_FPS                                                           04/15/2021 10:13:27 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE MMI_FPS
OBJECT MODULE PLACED IN .\output\mmi_fps.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE mmi_src\mmi_fps.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include;.
                    -\Library\byd_standard_peripheral\include;.\byd_api\byd_key\include;.\byd_api\byd_mifare\include;.\byd_tool_comm;.\byd_rf
                    -id;.\mmi_inc) DEBUG PRINT(.\list\mmi_fps.lst) TABS(2) OBJECT(.\output\mmi_fps.obj)

line level    source

   1          #ifndef __MMI_FPC_C__
   2          #define __MMI_FPC_C__
   3          
   4          #include "mmi_feature.h"
   5          #ifdef __LOCK_FP_SUPPORT__
              #include "string.h"
              #include "mmi_fps.h"
              #include "dqiot_drv.h"
              // #include <stdio.h>
              
              unsigned char FP_oldStatus = 0;
              /*
              parameter: 
                current status machine
              return :
                none
              */
              //void mmi_dq_fp_set_fp_uart_handle_cb(fp_uart_handle_callback cb)
              //{
              
              //}
              
              /*
              parameter: 
                current status machine
              return :
                none
              */
              //void mmi_dq_fps_set_irq_handle_cb(fp_irq_handle_callback cb)
              //{
              //  cb = NULL;
              //}
              
              /*
              parameter: 
                current status machine
              return :
                none
              */
              void mmi_dq_fp_init(void)
              {
                u16 waittime = 2000;
                dqiot_drv_fp_poweron();
                while (--waittime)
                {
                  delay_ms(1);
                  if (FP_Get_Start_Flag() == 1)
                  {
                    FP_Light(FP_BLUE);
                    return;
                  }
                }
              
C51 COMPILER V9.59.0.0   MMI_FPS                                                           04/15/2021 10:13:27 PAGE 2   

                return;
              }
              
              /*
              parameter: 
                current status machine
              return :
                none
              */
              unsigned char mmi_dq_fp_get_fp_mode(void)
              {
                return 1;
              }
              
              /**
                * @brief  检测传感器
                * @param  none
                * @return 确认码(正常0x00/错误0x29)
                * @note   none
                * @see    none
                */
              unsigned char mmi_dq_fp_check_sensor(void)
              {
                unsigned char retval = 0;
              
                retval = PS_CheckSensor();
                return retval;
              }
              
              /**
                * @brief  检测手指状态
                * @param  none
                * @return 确认码
                * @note   none
                * @see    none
                */
              unsigned char mmi_dq_fp_check_finger(void)
              {
                unsigned char retval = 0;
              
                retval = PS_CheckFinger();
                return retval;
              }
              
              /*
              parameter: 
                current status machine
              return :
                none
              */
              unsigned char mmi_dq_fp_get_image(void)
              {
                unsigned char retval = 0;
              
                retval = PS_GetImage();
                return retval;
              }
              
              /*
              parameter: 
                current status machine
              return :
C51 COMPILER V9.59.0.0   MMI_FPS                                                           04/15/2021 10:13:27 PAGE 3   

                none
              */
              unsigned char mmi_dq_fp_gen_char(unsigned char id)
              {
                unsigned char retval = 0;
                unsigned char real_buf_id;
              
                if (id == 0)
                  real_buf_id = CHAR_BUFFER1;
                else if (id == 1)
                  real_buf_id = CHAR_BUFFER2;
                else if (id == 2)
                  real_buf_id = CHAR_BUFFER3;
                else if (id == 3)
                  real_buf_id = CHAR_BUFFER4;
              
                retval = PS_GenChar(real_buf_id); //生成特征
                return retval;
              }
              
              /*
              parameter: 
                current status machine
              return :
                none
              */
              unsigned char mmi_dq_fp_match(void)
              {
                unsigned char retval = 0;
              
                retval = PS_Match();
                return retval;
              }
              
              /*
              parameter: 
                current status machine
              return :
                none
              */
              unsigned char mmi_dq_fp_reg_module(void)
              {
                unsigned char retval = 0;
              
                retval = PS_RegModel();
                return retval;
              }
              
              /*
              parameter: 
                current status machine
              return :
                none
              */
              unsigned char mmi_dq_fp_store_char(unsigned char id, unsigned short index)
              {
                unsigned char retval = 0;
                unsigned char real_buf_id;
              
                if (id == 0)
                  real_buf_id = CHAR_BUFFER1;
                else if (id == 1)
C51 COMPILER V9.59.0.0   MMI_FPS                                                           04/15/2021 10:13:27 PAGE 4   

                  real_buf_id = CHAR_BUFFER2;
                else if (id == 2)
                  real_buf_id = CHAR_BUFFER3;
                else if (id == 3)
                  real_buf_id = CHAR_BUFFER4;
              
                retval = PS_StoreChar(real_buf_id, index); //储存模板
                return retval;
              }
              
              /*
              parameter: 
                current status machine
              return :
                none
              */
              unsigned char mmi_dq_fp_delete(unsigned short index)
              {
                unsigned char retval = 0;
              
                retval = PS_DeletChar(index, 1);
                return retval;
              }
              
              /*
              parameter: 
                current status machine
              return :
                none
              */
              unsigned char mmi_dq_fp_empty(void)
              {
                unsigned char retval = 0;
              
                retval = PS_Empty();
                return retval;
              }
              
              /*
              parameter: 
                current status machine
              return :
                none
              */
              unsigned char mmi_dq_fp_get_valid_templete(unsigned short *count)
              {
                unsigned char retval = 0;
              
                retval = PS_ValidTempleteNum(count);
                return retval;
              }
              
              /*
              parameter: 
                current status machine
              return :
                none
              */
              unsigned char mmi_dq_fp_high_speed_search(unsigned char Buf_id, unsigned short *index)
              {
                unsigned char retval = 0;
                unsigned char real_buf_id;
C51 COMPILER V9.59.0.0   MMI_FPS                                                           04/15/2021 10:13:27 PAGE 5   

              
                if (Buf_id == 0)
                  real_buf_id = CHAR_BUFFER1;
                else if (Buf_id == 1)
                  real_buf_id = CHAR_BUFFER2;
                else if (Buf_id == 2)
                  real_buf_id = CHAR_BUFFER3;
                else if (Buf_id == 3)
                  real_buf_id = CHAR_BUFFER4;
              
                // retval = PS_HighSpeedSearch(real_buf_id, 0, 300, index);
                retval = PS_Search(real_buf_id, 0, 300, index);
                return retval;
              }
              
              /*
              parameter: 
                current status machine
              return :
                none
              */
              unsigned char mmi_dq_fp_search(unsigned char Buf_id, unsigned short *index)
              {
                unsigned char retval = 0;
                unsigned char real_buf_id;
              
                if (Buf_id == 0)
                  real_buf_id = CHAR_BUFFER1;
                else if (Buf_id == 1)
                  real_buf_id = CHAR_BUFFER2;
                else if (Buf_id == 2)
                  real_buf_id = CHAR_BUFFER3;
                else if (Buf_id == 3)
                  real_buf_id = CHAR_BUFFER4;
              
                retval = PS_Search(real_buf_id, 0, 300, index);
                return retval;
              }
              
              /*
              parameter: 
                current status machine
              return :
                none
              */
              void mmi_dq_fp_light(FP_COLOR_E light_id)
              {
                FP_Light(light_id); //点灯
              }
              
              /*
              parameter: 
                current status machine
              return :
                none
              */
              FP_COLOR_E mmi_dq_fp_get_light(void)
              {
                FP_COLOR_E retval = 0;
                retval = FP_Get_Light();
                return retval;
              }
C51 COMPILER V9.59.0.0   MMI_FPS                                                           04/15/2021 10:13:27 PAGE 6   

              
              /* 触摸判断 */
              unsigned char mmi_dq_fp_work(void)
              {
                if (gpio_bit_get(GPIOF, GPIO_PIN_6) == 1)
                {
                  if (FP_oldStatus == 0)
                  {
                    FP_oldStatus = 1;
                    return 1;
                  }
                }
                else
                  FP_oldStatus = 0;
                return 0;
              }
              
              unsigned char mmi_dq_fp_get_pin(void)
              {
                return gpio_bit_get(GPIOF, GPIO_PIN_6);
              }
              
              #endif //__LOCK_FP_SUPPORT__
 325          
 326          #endif //__MMI_FPC_C__


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   ----    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
