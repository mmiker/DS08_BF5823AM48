C51 COMPILER V9.59.0.0   IIC_MASTER                                                        03/04/2021 16:34:59 PAGE 1   


C51 COMPILER V9.59.0.0, COMPILATION OF MODULE IIC_MASTER
OBJECT MODULE PLACED IN .\output\iic_master.obj
COMPILER INVOKED BY: D:\Keil_v5\C51\BIN\C51.EXE source\iic_master.c LARGE OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\include
                    -;.\Library\byd_standard_peripheral\include;.\byd_api\byd_key\include;.\byd_api\byd_mifare\include;.\byd_tool_comm;.\byd_
                    -rfid;.\mmi_inc) DEBUG PRINT(.\list\iic_master.lst) TABS(2) OBJECT(.\output\iic_master.obj)

line level    source

   1          #include "iic_master.h"
   2          #include "delay.h"
   3          
   4          /*!
   5              \brief      iic master init
   6              \param[in]  none
   7              \param[out] none
   8              \retval     none
   9          */
  10          void iic_master_init(void)
  11          {
  12   1          OUT_SDA();
  13   1          OUT_SCL();
  14   1          SET_SDA();
  15   1          SET_SCL();
  16   1      }
  17          
  18          /*!
  19              \brief      iic start signal
  20              \param[in]  none
  21              \param[out] none
  22              \retval     none
  23          */
  24          void iic_master_start(void)
  25          {
  26   1          OUT_SDA();
  27   1          SET_SDA();  
  28   1          SET_SCL();
  29   1          delay_us(1);
  30   1          CLR_SDA();
  31   1          delay_us(1);
  32   1          CLR_SCL();
  33   1          //delay_us(30);
  34   1      }
  35          
  36          /*!
  37              \brief      iic stop signal
  38              \param[in]  none
  39              \param[out] none
  40              \retval     none
  41          */
  42          void iic_master_stop(void)
  43          {   
  44   1          CLR_SCL();
  45   1          OUT_SDA();  
  46   1          CLR_SDA();
  47   1          delay_us(1);
  48   1          SET_SCL();
  49   1          delay_us(1);
  50   1          SET_SDA();
  51   1      }
  52          
  53          /*!
C51 COMPILER V9.59.0.0   IIC_MASTER                                                        03/04/2021 16:34:59 PAGE 2   

  54              \brief      iic receive byte
  55              \param[in]  none
  56              \param[out] none
  57              \retval     receive data
  58          */
  59          uint8_t iic_receive_byte(void)
  60          {
  61   1          uint8_t i;
  62   1          uint8_t buffer;
  63   1          buffer = 0;
  64   1         
  65   1          IN_SDA();
  66   1              
  67   1          for (i = 0; i < 8; i++) {   
  68   2              CLR_SCL();
  69   2              delay_us(2);
  70   2              SET_SCL();
  71   2              delay_us(2);           
  72   2              if (SDA()) {        
  73   3                  buffer |= 0x01;
  74   3              }
  75   2              if (i < 7) {
  76   3                  buffer <<= 1;
  77   3              }
  78   2          }
  79   1          
  80   1          CLR_SCL();
  81   1          OUT_SDA();
  82   1          CLR_SDA();
  83   1      
  84   1          return (buffer);
  85   1      }
  86          
  87          /*!
  88              \brief      iic send byte
  89              \param[in]  none
  90              \param[out] none
  91              \retval     ack signal
  92          */
  93          bit iic_sendbyte_and_getnack(uint8_t send_data)
  94          {
  95   1          uint8_t i;
  96   1          bit ack;
  97   1      
  98   1          for (i = 0; i < 8; i++) {   
  99   2              CLR_SCL();
 100   2              delay_us(1);
 101   2              if (send_data & 0x80) {
 102   3                  SET_SDA();
 103   3              }
 104   2              else {
 105   3                  CLR_SDA();
 106   3              }
 107   2              delay_us(1);
 108   2              SET_SCL();
 109   2              delay_us(1);
 110   2      
 111   2              send_data <<= 1;
 112   2          }
 113   1          
 114   1          CLR_SCL();
 115   1          delay_us(1);
C51 COMPILER V9.59.0.0   IIC_MASTER                                                        03/04/2021 16:34:59 PAGE 3   

 116   1          
 117   1          IN_SDA();
 118   1          delay_us(1);
 119   1          SET_SCL();
 120   1          delay_us(2);
 121   1      
 122   1          ack = SDA();
 123   1      
 124   1          CLR_SCL();
 125   1          delay_us(1);                    
 126   1          OUT_SDA();
 127   1          CLR_SDA();
 128   1          delay_us(1); 
 129   1          
 130   1      
 131   1          return (ack);
 132   1      }
 133          
 134          /*!
 135              \brief      iic respond
 136              \param[in]  ack signal
 137              \param[out] none
 138              \retval     none
 139          */
 140          void iic_respond(uint8_t ack)
 141          {
 142   1          OUT_SDA();
 143   1          CLR_SDA();
 144   1          CLR_SCL();
 145   1          if (ack) {
 146   2              SET_SDA();
 147   2          }
 148   1          else {
 149   2              CLR_SDA();
 150   2          }
 151   1        delay_us(1);
 152   1          SET_SCL();
 153   1          delay_us(1);
 154   1          CLR_SCL();
 155   1      }
 156          
 157          /*!
 158              \brief      iic master write
 159              \param[in]  device_addr:iic device address
 160                  writedata
 161                  length
 162              \param[out] none
 163              \retval     none
 164          */
 165          void iic_master_writer_data(uint8_t device_addr, uint8_t *writedata, uint8_t length)  
 166          {   
 167   1          uint8_t i;    
 168   1      
 169   1        EA = 0;
 170   1          iic_master_start();
 171   1              
 172   1          if (iic_sendbyte_and_getnack(device_addr & ~0x01)) {   
 173   2              iic_master_stop();
 174   2          EA = 1;
 175   2              return;
 176   2          }
 177   1      
C51 COMPILER V9.59.0.0   IIC_MASTER                                                        03/04/2021 16:34:59 PAGE 4   

 178   1          for (i = 0; i < length; i++) {
 179   2              if (iic_sendbyte_and_getnack(writedata[i])) {
 180   3                  iic_master_stop();
 181   3            EA = 1;
 182   3                  return;
 183   3              }
 184   2          }   
 185   1          EA = 1;                        
 186   1          iic_master_stop();
 187   1      }
 188          
 189          /*!
 190              \brief      iic master read
 191              \param[in]  device_addr:iic device address
 192                  receivedata
 193                  length
 194              \param[out] none
 195              \retval     none
 196          */
 197          void iic_master_read_data(uint8_t device_addr, uint8_t *receivedata, uint8_t length)
 198          {
 199   1          uint8_t i;    
 200   1      
 201   1        EA = 0;
 202   1          iic_master_start();                
 203   1          if (iic_sendbyte_and_getnack(device_addr | 0x01)) {
 204   2              iic_master_stop();
 205   2          EA = 1; 
 206   2              return;
 207   2          }   
 208   1          
 209   1          for (i = 0; i < length; i++) {
 210   2              receivedata[i] = iic_receive_byte();
 211   2              if (i == (length - 1))
 212   2                  break;
 213   2              iic_respond(ACK);
 214   2          }
 215   1      
 216   1          iic_respond(NACK);
 217   1        EA = 1;
 218   1          iic_master_stop();           
 219   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    545    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----      16
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----       1
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
